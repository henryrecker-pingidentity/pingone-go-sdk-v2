/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionConfigurationDataCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionConfigurationDataCollection{}

// TransactionConfigurationDataCollection struct for TransactionConfigurationDataCollection
type TransactionConfigurationDataCollection struct {
	Timeout TransactionConfigurationDataCollectionTimeout `json:"timeout"`
}

type _TransactionConfigurationDataCollection TransactionConfigurationDataCollection

// NewTransactionConfigurationDataCollection instantiates a new TransactionConfigurationDataCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionConfigurationDataCollection(timeout TransactionConfigurationDataCollectionTimeout) *TransactionConfigurationDataCollection {
	this := TransactionConfigurationDataCollection{}
	this.Timeout = timeout
	return &this
}

// NewTransactionConfigurationDataCollectionWithDefaults instantiates a new TransactionConfigurationDataCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionConfigurationDataCollectionWithDefaults() *TransactionConfigurationDataCollection {
	this := TransactionConfigurationDataCollection{}
	return &this
}

// GetTimeout returns the Timeout field value
func (o *TransactionConfigurationDataCollection) GetTimeout() TransactionConfigurationDataCollectionTimeout {
	if o == nil {
		var ret TransactionConfigurationDataCollectionTimeout
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *TransactionConfigurationDataCollection) GetTimeoutOk() (*TransactionConfigurationDataCollectionTimeout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *TransactionConfigurationDataCollection) SetTimeout(v TransactionConfigurationDataCollectionTimeout) {
	o.Timeout = v
}

func (o TransactionConfigurationDataCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionConfigurationDataCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeout"] = o.Timeout
	return toSerialize, nil
}

func (o *TransactionConfigurationDataCollection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timeout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionConfigurationDataCollection := _TransactionConfigurationDataCollection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionConfigurationDataCollection)

	if err != nil {
		return err
	}

	*o = TransactionConfigurationDataCollection(varTransactionConfigurationDataCollection)

	return err
}

type NullableTransactionConfigurationDataCollection struct {
	value *TransactionConfigurationDataCollection
	isSet bool
}

func (v NullableTransactionConfigurationDataCollection) Get() *TransactionConfigurationDataCollection {
	return v.value
}

func (v *NullableTransactionConfigurationDataCollection) Set(val *TransactionConfigurationDataCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionConfigurationDataCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionConfigurationDataCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionConfigurationDataCollection(val *TransactionConfigurationDataCollection) *NullableTransactionConfigurationDataCollection {
	return &NullableTransactionConfigurationDataCollection{value: val, isSet: true}
}

func (v NullableTransactionConfigurationDataCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionConfigurationDataCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


