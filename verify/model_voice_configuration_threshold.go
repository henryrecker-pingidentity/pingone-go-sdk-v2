/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VoiceConfigurationThreshold type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceConfigurationThreshold{}

// VoiceConfigurationThreshold struct for VoiceConfigurationThreshold
type VoiceConfigurationThreshold struct {
	Threshold EnumThreshold `json:"threshold"`
}

type _VoiceConfigurationThreshold VoiceConfigurationThreshold

// NewVoiceConfigurationThreshold instantiates a new VoiceConfigurationThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceConfigurationThreshold(threshold EnumThreshold) *VoiceConfigurationThreshold {
	this := VoiceConfigurationThreshold{}
	this.Threshold = threshold
	return &this
}

// NewVoiceConfigurationThresholdWithDefaults instantiates a new VoiceConfigurationThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceConfigurationThresholdWithDefaults() *VoiceConfigurationThreshold {
	this := VoiceConfigurationThreshold{}
	return &this
}

// GetThreshold returns the Threshold field value
func (o *VoiceConfigurationThreshold) GetThreshold() EnumThreshold {
	if o == nil {
		var ret EnumThreshold
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *VoiceConfigurationThreshold) GetThresholdOk() (*EnumThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *VoiceConfigurationThreshold) SetThreshold(v EnumThreshold) {
	o.Threshold = v
}

func (o VoiceConfigurationThreshold) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceConfigurationThreshold) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["threshold"] = o.Threshold
	return toSerialize, nil
}

func (o *VoiceConfigurationThreshold) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"threshold",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVoiceConfigurationThreshold := _VoiceConfigurationThreshold{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVoiceConfigurationThreshold)

	if err != nil {
		return err
	}

	*o = VoiceConfigurationThreshold(varVoiceConfigurationThreshold)

	return err
}

type NullableVoiceConfigurationThreshold struct {
	value *VoiceConfigurationThreshold
	isSet bool
}

func (v NullableVoiceConfigurationThreshold) Get() *VoiceConfigurationThreshold {
	return v.value
}

func (v *NullableVoiceConfigurationThreshold) Set(val *VoiceConfigurationThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceConfigurationThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceConfigurationThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceConfigurationThreshold(val *VoiceConfigurationThreshold) *NullableVoiceConfigurationThreshold {
	return &NullableVoiceConfigurationThreshold{value: val, isSet: true}
}

func (v NullableVoiceConfigurationThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceConfigurationThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
