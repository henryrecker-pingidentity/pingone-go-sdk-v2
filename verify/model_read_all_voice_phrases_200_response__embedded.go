/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the ReadAllVoicePhrases200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadAllVoicePhrases200ResponseEmbedded{}

// ReadAllVoicePhrases200ResponseEmbedded struct for ReadAllVoicePhrases200ResponseEmbedded
type ReadAllVoicePhrases200ResponseEmbedded struct {
	VoicePhrases []VoicePhrase `json:"voicePhrases,omitempty"`
}

// NewReadAllVoicePhrases200ResponseEmbedded instantiates a new ReadAllVoicePhrases200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAllVoicePhrases200ResponseEmbedded() *ReadAllVoicePhrases200ResponseEmbedded {
	this := ReadAllVoicePhrases200ResponseEmbedded{}
	return &this
}

// NewReadAllVoicePhrases200ResponseEmbeddedWithDefaults instantiates a new ReadAllVoicePhrases200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAllVoicePhrases200ResponseEmbeddedWithDefaults() *ReadAllVoicePhrases200ResponseEmbedded {
	this := ReadAllVoicePhrases200ResponseEmbedded{}
	return &this
}

// GetVoicePhrases returns the VoicePhrases field value if set, zero value otherwise.
func (o *ReadAllVoicePhrases200ResponseEmbedded) GetVoicePhrases() []VoicePhrase {
	if o == nil || IsNil(o.VoicePhrases) {
		var ret []VoicePhrase
		return ret
	}
	return o.VoicePhrases
}

// GetVoicePhrasesOk returns a tuple with the VoicePhrases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAllVoicePhrases200ResponseEmbedded) GetVoicePhrasesOk() ([]VoicePhrase, bool) {
	if o == nil || IsNil(o.VoicePhrases) {
		return nil, false
	}
	return o.VoicePhrases, true
}

// HasVoicePhrases returns a boolean if a field has been set.
func (o *ReadAllVoicePhrases200ResponseEmbedded) HasVoicePhrases() bool {
	if o != nil && !IsNil(o.VoicePhrases) {
		return true
	}

	return false
}

// SetVoicePhrases gets a reference to the given []VoicePhrase and assigns it to the VoicePhrases field.
func (o *ReadAllVoicePhrases200ResponseEmbedded) SetVoicePhrases(v []VoicePhrase) {
	o.VoicePhrases = v
}

func (o ReadAllVoicePhrases200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadAllVoicePhrases200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VoicePhrases) {
		toSerialize["voicePhrases"] = o.VoicePhrases
	}
	return toSerialize, nil
}

type NullableReadAllVoicePhrases200ResponseEmbedded struct {
	value *ReadAllVoicePhrases200ResponseEmbedded
	isSet bool
}

func (v NullableReadAllVoicePhrases200ResponseEmbedded) Get() *ReadAllVoicePhrases200ResponseEmbedded {
	return v.value
}

func (v *NullableReadAllVoicePhrases200ResponseEmbedded) Set(val *ReadAllVoicePhrases200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAllVoicePhrases200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAllVoicePhrases200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAllVoicePhrases200ResponseEmbedded(val *ReadAllVoicePhrases200ResponseEmbedded) *NullableReadAllVoicePhrases200ResponseEmbedded {
	return &NullableReadAllVoicePhrases200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableReadAllVoicePhrases200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAllVoicePhrases200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
