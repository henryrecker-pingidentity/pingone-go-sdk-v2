openapi: 3.1.0
info:
  description: The PingOne Platform API covering the PingOne MFA service
  title: PingOne Platform API - PingOne MFA
  version: 2023-06-29
externalDocs:
  description: PingOne Platform API Reference - PingOne MFA APIs
  url: https://apidocs.pingidentity.com/pingone/platform/v1/api/#pingone-mfa
servers:
- description: PingOne Platform API Endpoint
  url: "{protocol}://{baseDomain}.{suffix}/v1"
  variables:
    suffix:
      default: com
      enum:
      - asia
      - ca
      - com
      - com.au
      - eu
    baseDomain:
      default: api.pingone
    protocol:
      default: https
- description: PingOne Platform API Endpoint
  url: "{protocol}://{baseHostname}/v1"
  variables:
    baseHostname:
      default: api.pingone.com
    protocol:
      default: https
security:
- bearer: []
tags:
- name: FIDO Device
- name: Device Authentication Policy
- name: FIDO Policy
- name: MFA Settings
- name: User MFA Devices
- name: User MFA Devices > FIDO2 Biometrics Devices
- name: Enable Users MFA
- name: User MFA Pairing Keys
paths:
  /environments/{environmentID}/applications/{applicationID}/pushCredentials:
    get:
      operationId: readAllMFAPushCredentials
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readAllMFAPushCredentials_200_response'
          description: Successful response
      summary: READ All MFA Push Credentials
      tags:
      - Applications > Application MFA Push Credentials
      x-pingidentity-paginatedresponse: true
    post:
      operationId: createMFAPushCredential
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAPushCredentialRequest'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
          description: Successful response
      summary: CREATE MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
  /environments/{environmentID}/applications/{applicationID}/pushCredentials/{pushCredentialID}:
    delete:
      operationId: deleteMFAPushCredential
      parameters:
      - example: "Bearer {{accessToken}}"
        explode: false
        in: header
        name: Authorization
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pushCredentialID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
    get:
      operationId: readOneMFAPushCredential
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pushCredentialID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
          description: Successful response
      summary: READ One MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
    put:
      operationId: updateMFAPushCredential
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pushCredentialID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAPushCredentialRequest'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
          description: Successful response
      summary: UPDATE MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
  /environments/{environmentID}/deviceAuthenticationPolicies:
    get:
      operationId: readDeviceAuthenticationPolicies
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readDeviceAuthenticationPolicies_200_response'
          description: Successful response
      summary: READ Device Authentication Policies
      tags:
      - Device Authentication Policy
      x-pingidentity-paginatedresponse: true
    post:
      operationId: createDeviceAuthenticationPolicies
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          $ref: '#/components/schemas/EnumDeviceAuthenticationPolicyPostContentType'
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicyPost'
          application/vnd.pingidentity.deviceAuthenticationPolicy.fido2.migrate+json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicyPost'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicyPostResponse'
          description: Successful response (migration)
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicyPostResponse'
          description: Successful response
      summary: CREATE Device Authentication Policy
      tags:
      - Device Authentication Policy
  /environments/{environmentID}/deviceAuthenticationPolicies/{deviceAuthenticationPolicyID}:
    delete:
      operationId: deleteDeviceAuthenticationPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceAuthenticationPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE Device Authentication Policy
      tags:
      - Device Authentication Policy
    get:
      operationId: readOneDeviceAuthenticationPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceAuthenticationPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          description: Successful response
      summary: READ One Device Authentication Policy
      tags:
      - Device Authentication Policy
    put:
      operationId: updateDeviceAuthenticationPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceAuthenticationPolicyID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          description: Successful response
      summary: UPDATE Device Authentication Policy
      tags:
      - Device Authentication Policy
  /environments/{environmentID}/fidoDevicesMetadata:
    get:
      operationId: readFidoDevices
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readFidoDevices_200_response'
          description: Successful response
      summary: READ All FIDO Devices
      tags:
      - FIDO Device
      x-pingidentity-paginatedresponse: true
    post:
      operationId: createFidoDevice
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOCustomDeviceMetadata'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDODevice'
          description: Successful response
      summary: CREATE FIDO Device
      tags:
      - FIDO Device
  /environments/{environmentID}/fidoDevicesMetadata/{fidoDeviceID}:
    delete:
      operationId: deleteFidoDevice
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoDeviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE FIDO Device
      tags:
      - FIDO Device
    get:
      operationId: readOneFidoDevice
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoDeviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDODevice'
          description: Successful response
      summary: READ One FIDO Device
      tags:
      - FIDO Device
  /environments/{environmentID}/fidoPolicies:
    get:
      deprecated: true
      operationId: readFidoPolicies
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readFidoPolicies_200_response'
          description: Successful response
      summary: READ FIDO Policies
      tags:
      - FIDO Policy
      x-pingidentity-go-deprecated-message: Replaced with `FIDO2PolicyApi.ReadFIDO2Policies`.
      x-pingidentity-paginatedresponse: true
    post:
      deprecated: true
      operationId: createFidoPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOPolicy'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
          description: Successful response
      summary: CREATE FIDO Policy
      tags:
      - FIDO Policy
      x-pingidentity-go-deprecated-message: Replaced with `FIDO2PolicyApi.CreateFIDO2Policy`.
  /environments/{environmentID}/fidoPolicies/{fidoPolicyID}:
    delete:
      deprecated: true
      operationId: deleteFidoPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE FIDO Policy
      tags:
      - FIDO Policy
      x-pingidentity-go-deprecated-message: Replaced with `FIDO2PolicyApi.DeleteFIDO2Policy`.
    get:
      deprecated: true
      operationId: readOneFidoPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
          description: Successful response
      summary: READ One FIDO Policy
      tags:
      - FIDO Policy
      x-pingidentity-go-deprecated-message: Replaced with `FIDO2PolicyApi.ReadOneFIDO2Policy`.
    put:
      deprecated: true
      operationId: updateFIDOPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoPolicyID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOPolicy'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
          description: Successful response
      summary: UPDATE FIDO Policy
      tags:
      - FIDO Policy
      x-pingidentity-go-deprecated-message: Replaced with `FIDO2PolicyApi.UpdateFIDO2Policy`.
  /environments/{environmentID}/fido2Policies:
    get:
      operationId: readFIDO2Policies
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readFIDO2Policies_200_response'
          description: Successful response
      summary: READ FIDO2 Policies
      tags:
      - FIDO2 Policy
      x-pingidentity-paginatedresponse: true
    post:
      operationId: createFIDO2Policy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDO2Policy'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDO2Policy'
          description: Successful response
      summary: CREATE FIDO2 Policy
      tags:
      - FIDO2 Policy
  /environments/{environmentID}/fido2Policies/{fido2PolicyID}:
    delete:
      operationId: deleteFIDO2Policy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fido2PolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE FIDO2 Policy
      tags:
      - FIDO2 Policy
    get:
      operationId: readOneFIDO2Policy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fido2PolicyID
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - deviceAuthenticationPolicies
          type: string
        style: form
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDO2Policy'
          description: Successful response
      summary: READ One FIDO2 Policy
      tags:
      - FIDO2 Policy
    put:
      operationId: updateFIDO2Policy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fido2PolicyID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDO2Policy'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDO2Policy'
          description: Successful response
      summary: UPDATE FIDO2 Policy
      tags:
      - FIDO2 Policy
  /environments/{environmentID}/mfaSettings:
    delete:
      operationId: resetMFASettings
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
          description: Successful response
      summary: RESET MFA Settings
      tags:
      - MFA Settings
    get:
      operationId: readMFASettings
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
          description: Successful response
      summary: READ MFA Settings
      tags:
      - MFA Settings
    put:
      operationId: updateMFASettings
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFASettings'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
          description: Successful response
      summary: UPDATE MFA Settings
      tags:
      - MFA Settings
  /environments/{environmentID}/users/{userID}/devices:
    delete:
      parameters:
      - example: application/vnd.pingidentity.devices.order.remove+json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE Device Order
      tags:
      - User MFA Devices
    get:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: READ All MFA User Devices
      tags:
      - User MFA Devices
    post:
      parameters:
      - example: application/vnd.pingidentity.devices.reorder+json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                order:
                - id: "{{deviceID}}"
                - id: "{{deviceID2}}"
                - id: "{{deviceID3}}"
                - id: "{{deviceID4}}"
                - id: "{{deviceID5}}"
              type: object
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: SET Device Order
      tags:
      - User MFA Devices
  /environments/{environmentID}/users/{userID}/devices/{deviceID}:
    delete:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE MFA User Device
      tags:
      - User MFA Devices
    get:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: READ One MFA User Device
      tags:
      - User MFA Devices
    post:
      parameters:
      - example: application/vnd.pingidentity.device.activate+json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                otp: xxxxxx
              type: object
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: ACTIVATE MFA User Device
      tags:
      - User MFA Devices
  /environments/{environmentID}/users/{userID}/devices/{deviceID}/nickname:
    put:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                nickname: My phone
              type: object
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: UPDATE Device Nickname
      tags:
      - User MFA Devices
  /environments/{environmentID}/users/{userID}/devices/{deviceID}/logs:
    put:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                status: PENDING
              type: object
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: SEND MFA Device Logs
      tags:
      - User MFA Devices
  /environments/{environmentID}/users/{userID}/mfaEnabled:
    get:
      operationId: readUserMFAEnabled
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMFAEnabled'
          description: Successful response
      summary: READ User MFA Enabled
      tags:
      - Enable Users MFA
    put:
      operationId: updateUserMFAEnabled
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserMFAEnabled'
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMFAEnabled'
          description: Successful response
      summary: UPDATE User MFA Enabled
      tags:
      - Enable Users MFA
  /environments/{environmentID}/users/{userID}/pairingKeys/{pairingKeyID}:
    delete:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pairingKeyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "204":
          description: Successful response
      summary: DELETE MFA Pairing Key
      tags:
      - User MFA Pairing Keys
    get:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pairingKeyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: READ One MFA Pairing Key
      tags:
      - User MFA Pairing Keys
  /environments/{environmentID}/users/{userID}/pairingKeys:
    post:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                applications:
                - id: "{{applicationID}}"
              type: object
      responses:
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "405":
          $ref: '#/components/responses/405'
        "409":
          $ref: '#/components/responses/409'
        "429":
          $ref: '#/components/responses/429'
        "500":
          $ref: '#/components/responses/500'
        "201":
          content:
            application/json: {}
          description: Successful response
      summary: CREATE MFA Pairing Key
      tags:
      - User MFA Pairing Keys
components:
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: "Invalid request received.  Malformed JSON, malformed HTTP request."
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Request failed due to authorization issue.
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Request failed due to authorization issue.
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Not found.
    "405":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: "Invalid request received.  Malformed JSON, malformed HTTP request."
    "409":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Conflict.
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Request was rate limited
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Uncaught error occurred.  Platform outage
  schemas:
    LinksHATEOAS:
      additionalProperties:
        $ref: '#/components/schemas/LinksHATEOAS_value'
      readOnly: true
      x-pingidentity-paginatedresponse-links: true
    DeviceAuthenticationPolicyFIDODevice:
      deprecated: true
      example:
        pairingDisabled: true
        enabled: true
        fidoPolicyId: fidoPolicyId
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        pairingDisabled:
          description: You can set `pairingDisabled` to true to prevent users from
            pairing new devices with the relevant method. You can use this option
            if you want to phase out an existing authentication method but want to
            allow users to continue using the method for authentication for existing
            devices.
          type: boolean
        fidoPolicyId:
          description: "Specifies the FIDO policy UUID. This property can be null.\
            \ When null, the environment's default FIDO Policy is used."
          type: string
      required:
      - enabled
    DeviceAuthenticationPolicyOfflineDevice:
      example:
        pairingDisabled: true
        otp:
          otpLength: 8
          failure:
            count: 6
            coolDown:
              duration: 1
              timeUnit: null
          lifeTime:
            duration: 0
            timeUnit: MINUTES
        enabled: true
        promptForNicknameOnPairing: true
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        pairingDisabled:
          description: You can set `pairingDisabled` to true to prevent users from
            pairing new devices with the relevant method. You can use this option
            if you want to phase out an existing authentication method but want to
            allow users to continue using the method for authentication for existing
            devices.
          type: boolean
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp'
        promptForNicknameOnPairing:
          description: Set to `true` if you want to allow users to provide nicknames
            for devices during pairing.
          type: boolean
      required:
      - enabled
      - otp
    DeviceAuthenticationPolicy:
      example:
        voice:
          pairingDisabled: true
          otp:
            otpLength: 8
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            lifeTime:
              duration: 0
              timeUnit: MINUTES
          enabled: true
          promptForNicknameOnPairing: true
        totp:
          pairingDisabled: true
          uriParameters:
            key: uriParameters
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
          enabled: true
          promptForNicknameOnPairing: true
        newDeviceNotification: NONE
        _links:
          key:
            href: https://openapi-generator.tech
        mobile:
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            window:
              stepSize:
                duration: 5
                timeUnit: null
          enabled: true
          promptForNicknameOnPairing: true
          applications:
          - autoEnrollment:
              enabled: true
            pairingDisabled: true
            deviceAuthorization:
              extraVerification: permissive
              enabled: true
            pairingKeyLifetime:
              duration: 7
              timeUnit: MINUTES
            integrityDetection: permissive
            pushTimeout:
              duration: 65
              timeUnit: SECONDS
            otp:
              enabled: true
            id: id
            push:
              enabled: true
            pushLimit:
              lockDuration:
                duration: 3
                timeUnit: null
              count: 46
              timePeriod:
                duration: 2
                timeUnit: null
          - autoEnrollment:
              enabled: true
            pairingDisabled: true
            deviceAuthorization:
              extraVerification: permissive
              enabled: true
            pairingKeyLifetime:
              duration: 7
              timeUnit: MINUTES
            integrityDetection: permissive
            pushTimeout:
              duration: 65
              timeUnit: SECONDS
            otp:
              enabled: true
            id: id
            push:
              enabled: true
            pushLimit:
              lockDuration:
                duration: 3
                timeUnit: null
              count: 46
              timePeriod:
                duration: 2
                timeUnit: null
        fido2:
          fido2PolicyId: fido2PolicyId
          pairingDisabled: true
          enabled: true
          promptForNicknameOnPairing: true
        platform:
          pairingDisabled: true
          enabled: true
          fidoPolicyId: fidoPolicyId
        forSignOnPolicy: true
        environment:
          id: id
        default: true
        name: name
        sms:
          pairingDisabled: true
          otp:
            otpLength: 8
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            lifeTime:
              duration: 0
              timeUnit: MINUTES
          enabled: true
          promptForNicknameOnPairing: true
        id: id
        securityKey:
          pairingDisabled: true
          enabled: true
          fidoPolicyId: fidoPolicyId
        email:
          pairingDisabled: true
          otp:
            otpLength: 8
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            lifeTime:
              duration: 0
              timeUnit: MINUTES
          enabled: true
          promptForNicknameOnPairing: true
        authentication:
          deviceSelection: DEFAULT_TO_FIRST
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        id:
          description: Device authentication policy's UUID.
          readOnly: true
          type: string
        name:
          description: Device authentication policy's name.
          type: string
        newDeviceNotification:
          $ref: '#/components/schemas/EnumMFADevicePolicyNewDeviceNotification'
        authentication:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_authentication'
        sms:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        voice:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        email:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        fido2:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_fido2'
        mobile:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile'
        totp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_totp'
        securityKey:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyFIDODevice'
        platform:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyFIDODevice'
        default:
          description: A boolean that specifies whether the policy is the default
            for the environment.
          type: boolean
        forSignOnPolicy:
          deprecated: true
          type: boolean
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
      required:
      - default
      - email
      - forSignOnPolicy
      - mobile
      - name
      - sms
      - totp
      - voice
    DeviceAuthenticationPolicyPost:
      oneOf:
      - $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      - $ref: '#/components/schemas/DeviceAuthenticationPolicyMigrate'
    DeviceAuthenticationPolicyPostResponse:
      oneOf:
      - $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      - $ref: '#/components/schemas/readDeviceAuthenticationPolicies_200_response'
    DeviceAuthenticationPolicyMigrate:
      properties:
        migrationData:
          items:
            $ref: '#/components/schemas/DeviceAuthenticationPolicyMigrateData'
          type: array
      required:
      - migrationData
    DeviceAuthenticationPolicyMigrateData:
      properties:
        deviceAuthenticationPolicyId:
          description: The ID of the device authentication policy.
          type: string
        fido2PolicyId:
          description: The ID of the FIDO2 policy.
          type: string
      required:
      - deviceAuthenticationPolicyId
    EnumDeviceAuthenticationPolicyPostContentType:
      enum:
      - application/json
      - application/vnd.pingidentity.deviceAuthenticationPolicy.fido2.migrate+json
      type: string
    EnumFIDOAttestationRequirements:
      description: |
        Determines whether attestation is requested from the authenticator, and whether this information is used to restrict authenticator usage. Can take one of these values:
        `NONE` - attestation is not requested
        `AUDIT_ONLY` - Attestation is requested and the information is used for logging purposes, but the information is not used for filtering authenticators
        `GLOBAL` - all entries in the MDS table can be used for authentication
        `CERTIFIED` - only FIDO-certified authenticators can be used
        `SPECIFIC` - only specific authenticators can be used. Used in conjunction with `allowedAuthenticators`.
      enum:
      - NONE
      - AUDIT_ONLY
      - GLOBAL
      - CERTIFIED
      - SPECIFIC
      type: string
    EnumFIDOResidentKeyRequirement:
      description: Used to enable resident keys. Value can be `DISCOURAGED` or `REQUIRED`.
      enum:
      - DISCOURAGED
      - REQUIRED
      type: string
    EnumFIDO2PolicyAttestationRequirements:
      description: "Set to `DIRECT` if you want to require attestation. Set to `NONE`\
        \ if you don't want to require attestation. If you set `attestationRequirements`\
        \ to `NONE`, you should also set `mdsAuthenticatorsRequirements.option` to\
        \ `NONE`."
      enum:
      - DIRECT
      - NONE
      type: string
    EnumFIDO2PolicyAuthenticatorAttachment:
      description: |
        Used to control the type of authenticators that are allowed. Can be one of the following values:
        - `PLATFORM` - only allow the use of FIDO device authenticators that contain an internal authenticator (such as a face or fingerprint scanner)
        - `CROSS_PLATFORM` - allow use of cross-platform authenticators, which are external to the accessing device (such as a security key)
        - `BOTH` - allow both categories of authenticators
      enum:
      - PLATFORM
      - CROSS_PLATFORM
      - BOTH
      type: string
    EnumFIDO2PolicyDiscoverableCredentials:
      description: |
        Use this field to specify when registered users can authenticate without providing credentials. The possible values are:
        - `DISCOURAGED` - discoverable credentials are not used, even when supported by the FIDO device. In cases where use of discoverable credentials is required by the FIDO device itself, this setting does not override the device setting.
        - `REQUIRED` - require the use of discoverable credentials. This option is required for usernameless authentication.
        - `PREFERRED` - use discoverable credentials where possible.
      enum:
      - DISCOURAGED
      - REQUIRED
      - PREFERRED
      type: string
    EnumFIDO2PolicyMDSAuthenticatorOption:
      description: |
        Use `option` to specify the types of devices you want to allow on the basis of the attestation provided. Can be one of the following values:
        - `NONE` - do not request attestation, allow all FIDO devices
        - `AUDIT_ONLY` - attestation is requested and the information is used for logging purposes, but the information is not used for filtering authenticators
        - `GLOBAL` - allow use of all FIDO authenticators listed in the Global Authenticators table.
        - `CERTIFIED` - allow only FIDO Certified authenticators
        - `SPECIFIC` - allow only the authenticators specified with the `mdsAuthenticatorsRequirements.allowedAuthenticators` parameter.
      enum:
      - NONE
      - AUDIT_ONLY
      - GLOBAL
      - CERTIFIED
      - SPECIFIC
      type: string
    EnumFIDO2PolicyUserVerificationOption:
      description: |
        Can be one of the following values:
        - `REQUIRED` - only FIDO devices supporting user verification can be used
        - `DISCOURAGED` - user verification is not required, even when supported by the FIDO device. In cases where user verification is required by the FIDO device itself, this setting does not override the device setting.
        - `PREFERRED` - user verification is required if the user's FIDO device supports it, but is not required if the user's device does not support it.
        For usernameless flows, only FIDO devices supporting user verification can be used, regardless of the value you set for `userVerification.option`.
      enum:
      - REQUIRED
      - DISCOURAGED
      - PREFERRED
      type: string
    EnumMFADevicePolicyMobileExtraVerification:
      description: "Specifies the level of further verification when deviceAuthorization\
        \ is enabled. The PingOne platform performs an extra verification check by\
        \ sending a “silent” push notification to the customer native application,\
        \ and receives a confirmation in return."
      enum:
      - permissive
      - restrictive
      type: string
    EnumMFADevicePolicyMobileIntegrityDetection:
      description: Controls how authentication or registration attempts should proceed
        if a device integrity check does not receive a response. Set the value to
        `permissive` if you want to allow the process to continue. Set the value to
        `restrictive` if you want to block the user in such situations.
      enum:
      - permissive
      - restrictive
      type: string
    EnumMFADevicePolicyNewDeviceNotification:
      description: |
        Use `newDeviceNotification` to control whether a user should be notified if a new authentication method has been added to their account. Can take one of the following values:
        - `NONE` - don't notify the user when a new authentication method is added.
        - `EMAIL_THEN_SMS` - notify the user by email. If there is no email address in the user profile, notify the user by SMS. If there is no phone number either, don't notify the user.
        - `SMS_THEN_EMAIL` - notify the user by SMS. If there is no phone number in the user profile, notify the user by email. If there is no email address either, don't notify the user.
        If the parameter is not provided, the default value is `EMAIL_THEN_SMS`.
      enum:
      - NONE
      - EMAIL_THEN_SMS
      - SMS_THEN_EMAIL
      type: string
    EnumMFADevicePolicySelection:
      description: |
        The default method that should be used for authentication. Can take one of the following values:
        * `DEFAULT_TO_FIRST` - use the method that the user set as their default
        * `PROMPT_TO_SELECT` - always have the user select the method to use if there is more than one method available
        * `ALWAYS_DISPLAY_DEVICES` - always have the user select the method to use even if there is only one method available
        If this parameter is not provided, the `DEFAULT_TO_FIRST` option is used.
      enum:
      - DEFAULT_TO_FIRST
      - PROMPT_TO_SELECT
      - ALWAYS_DISPLAY_DEVICES
      type: string
    EnumMFAPushCredentialAttrType:
      description: |
        Specifies the push credential type.
        Valid values:
        * APNS (for Apple)
        * FCM_HTTP_V1 (for Google)
        * FCM (deprecated, used previously for Google)
        * HMS (for Huawei)
      enum:
      - APNS
      - FCM
      - HMS
      - FCM_HTTP_V1
      type: string
    EnumMFASettingsDeviceSelection:
      deprecated: true
      description: A string that defines the device selection method. Options are
        DEFAULT_TO_FIRST (this is the default setting) and PROMPT_TO_SELECT.
      enum:
      - DEFAULT_TO_FIRST
      - PROMPT_TO_SELECT
      type: string
    EnumMFASettingsPairingKeyFormat:
      description: String that controls the type of pairing key issued. The valid
        values are NUMERIC (12-digit key) and ALPHANUMERIC (16-character alphanumeric
        key).
      enum:
      - NUMERIC
      - ALPHANUMERIC
      type: string
    EnumTimeUnit:
      description: The type of time unit
      enum:
      - MINUTES
      - SECONDS
      type: string
    EnumTimeUnitPairingKeyLifetime:
      description: The time unit for the `pairingKeyLifetime.duration` parameter.
      enum:
      - MINUTES
      - HOURS
      type: string
    EnumTimeUnitPushTimeout:
      description: "The time unit for the `pushTimeout.duration` parameter. Currently,\
        \ the only permitted value is `SECONDS`."
      enum:
      - SECONDS
      type: string
    FIDOCustomDeviceMetadata:
      type: object
    FIDODevice:
      type: object
    FIDOPolicy:
      deprecated: true
      example:
        _links:
          key:
            href: https://openapi-generator.tech
        description: description
        enforceDuringAuthentication: false
        allowedAuthenticators:
        - id: id
        - id: id
        createdAt: 2000-01-23T04:56:07.000+00:00
        environment:
          id: id
        default: true
        _embedded: "{}"
        name: name
        attestationRequirements: NONE
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
        residentKeyRequirement: DISCOURAGED
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        id:
          description: FIDO policy's UUID.
          readOnly: true
          type: string
        createdAt:
          description: The time the resource was created.
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
        _embedded:
          type: object
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        name:
          description: The name to use for the FIDO policy.
          type: string
        description:
          description: Description of the FIDO policy.
          type: string
        attestationRequirements:
          $ref: '#/components/schemas/EnumFIDOAttestationRequirements'
        allowedAuthenticators:
          description: "If `attestationRequirements` is set to `SPECIFIC`, this array\
            \ is used to specify the authenticators that you want to allow."
          items:
            $ref: '#/components/schemas/FIDOPolicy_allowedAuthenticators_inner'
          type: array
        enforceDuringAuthentication:
          default: false
          description: "This parameter is relevant only if you have set `attestationRequirements`\
            \ to `SPECIFIC` in order to restrict usage to only certain authenticators.\
            \ If set to `true`, the policy will be applied both during registration\
            \ and during each authentication attempt. If set to `false`, the policy\
            \ is applied only during registration. Default is `false`."
          type: boolean
        default:
          description: Whether this policy should serve as the default FIDO policy.
          type: boolean
        residentKeyRequirement:
          $ref: '#/components/schemas/EnumFIDOResidentKeyRequirement'
      required:
      - attestationRequirements
      - name
      - residentKeyRequirement
    FIDO2Policy:
      example:
        authenticatorAttachment: PLATFORM
        userVerification:
          enforceDuringAuthentication: true
          option: REQUIRED
        _links:
          key:
            href: https://openapi-generator.tech
        userDisplayNameAttributes:
          attributes:
          - name: name
            subAttributes:
            - name: name
            - name: name
          - name: name
            subAttributes:
            - name: name
            - name: name
        description: description
        backupEligibility:
          allow: true
          enforceDuringAuthentication: true
        mdsAuthenticatorsRequirements:
          enforceDuringAuthentication: true
          allowedAuthenticators:
          - id: id
          - id: id
          option: NONE
        relyingPartyId: relyingPartyId
        deviceDisplayName: deviceDisplayName
        createdAt: 2000-01-23T04:56:07.000+00:00
        environment:
          id: id
        default: true
        name: name
        attestationRequirements: DIRECT
        id: id
        deviceAuthenticationPolicies:
        - deviceAuthenticationPolicies
        - deviceAuthenticationPolicies
        discoverableCredentials: DISCOURAGED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        id:
          description: FIDO policy's UUID.
          readOnly: true
          type: string
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        createdAt:
          description: The time the resource was created.
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
        attestationRequirements:
          $ref: '#/components/schemas/EnumFIDO2PolicyAttestationRequirements'
        authenticatorAttachment:
          $ref: '#/components/schemas/EnumFIDO2PolicyAuthenticatorAttachment'
        backupEligibility:
          $ref: '#/components/schemas/FIDO2Policy_backupEligibility'
        default:
          description: Whether this policy should serve as the default FIDO policy.
          type: boolean
        description:
          description: Description of the FIDO policy.
          type: string
        deviceAuthenticationPolicies:
          description: "The device authentication policies that use the relevant FIDO\
            \ policy. If you include the parameter `expand=deviceAuthenticationPolicies`\
            \ in the URL of the request, this array is included in the response when\
            \ reading FIDO policies. Each object in the array contains the ID and\
            \ the name of the device authentication policy."
          items:
            type: string
          type: array
        deviceDisplayName:
          description: "The name to display for the device in registration and authentication\
            \ windows. Can be up to 100 characters. If you want to use translatable\
            \ text, you can use any of the keys listed on the *FIDO Policy* page of\
            \ the *Self-Service* module and the *Sign On Policy* module. The value\
            \ of the parameter should include only the part of the key name that comes\
            \ after the module name, for example, `fidoPolicy.deviceDisplayName01`\
            \ or `fidoPolicy.deviceDisplayName07`. See the pages in the UI for the\
            \ full list of keys. For more information on translatable keys, see [Modifying\
            \ translatable keys](https://docs.pingidentity.com/access/sources/dita/topic?category=p1&resourceid=pingone_modifying_translatable_keys)\
            \ in the PingOne documentation."
          maxLength: 100
          type: string
        discoverableCredentials:
          $ref: '#/components/schemas/EnumFIDO2PolicyDiscoverableCredentials'
        mdsAuthenticatorsRequirements:
          $ref: '#/components/schemas/FIDO2Policy_mdsAuthenticatorsRequirements'
        name:
          description: The name to use for the FIDO policy. Can be up to 256 characters.
          maxLength: 256
          type: string
        relyingPartyId:
          description: "The ID of the relying party. The value should be a domain\
            \ name, such as `example.com` (in lower-case characters)."
          type: string
        userDisplayNameAttributes:
          $ref: '#/components/schemas/FIDO2Policy_userDisplayNameAttributes'
        userVerification:
          $ref: '#/components/schemas/FIDO2Policy_userVerification'
      required:
      - attestationRequirements
      - authenticatorAttachment
      - backupEligibility
      - deviceDisplayName
      - discoverableCredentials
      - mdsAuthenticatorsRequirements
      - name
      - relyingPartyId
      - userDisplayNameAttributes
      - userVerification
    MFAPushCredential:
      properties:
        type:
          $ref: '#/components/schemas/EnumMFAPushCredentialAttrType'
      required:
      - type
    MFAPushCredentialAPNS:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - properties:
          key:
            description: A string that Apple uses as an identifier to identify an
              authentication key.  Mandatory.
            format: password
            type: string
          teamId:
            description: A string that Apple uses as an identifier to identify teams.
            type: string
          token:
            description: A string that Apple uses as the authentication token signing
              key to securely connect to APNS. This is a p8 file with a private key
              format.
            format: password
            type: string
        required:
        - key
        - teamId
        - token
      example:
        teamId: teamId
        type: APNS
        key: key
        token: token
    MFAPushCredentialFCM:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - deprecated: true
        properties:
          key:
            deprecated: true
            description: A string that Apple uses as an identifier to identify an
              authentication key.  Mandatory.
            format: password
            type: string
        required:
        - key
      deprecated: true
    MFAPushCredentialFCMHTTPV1:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - properties:
          googleServiceAccountCredentials:
            description: Used when `type` is set to `FCM_HTTP_V1`. The value should
              be the contents of the JSON file that represents your Service Account
              Credentials.
            format: password
            type: string
        required:
        - googleServiceAccountCredentials
    MFAPushCredentialHMS:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - properties:
          clientId:
            description: Used only if type is set to HMS. OAuth 2.0 Client ID from
              the Huawei Developers API console.
            type: string
          clientSecret:
            description: Used only if type is set to HMS. The client secret associated
              with the OAuth 2.0 Client ID.
            format: password
            type: string
        required:
        - clientId
        - clientSecret
    MFAPushCredentialRequest:
      oneOf:
      - $ref: '#/components/schemas/MFAPushCredentialAPNS'
      - $ref: '#/components/schemas/MFAPushCredentialFCM'
      - $ref: '#/components/schemas/MFAPushCredentialFCMHTTPV1'
      - $ref: '#/components/schemas/MFAPushCredentialHMS'
    MFAPushCredentialResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            href: https://openapi-generator.tech
        id: id
        type: APNS
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        id:
          description: A string that specifies the push credential ID.
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/EnumMFAPushCredentialAttrType'
        createdAt:
          description: The time the resource was created.
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
    MFASettings:
      example:
        environment:
          id: id
        phoneExtensions:
          enabled: true
        lockout:
          durationSeconds: 6
          failureCount: 0
        _links:
          key:
            href: https://openapi-generator.tech
        pairing:
          pairingKeyFormat: NUMERIC
          maxAllowedDevices: 2
        users:
          mfaEnabled: true
        authentication:
          deviceSelection: DEFAULT_TO_FIRST
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        authentication:
          $ref: '#/components/schemas/MFASettings_authentication'
        lockout:
          $ref: '#/components/schemas/MFASettings_lockout'
        pairing:
          $ref: '#/components/schemas/MFASettings_pairing'
        phoneExtensions:
          $ref: '#/components/schemas/MFASettings_phoneExtensions'
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
        users:
          $ref: '#/components/schemas/MFASettings_users'
      required:
      - pairing
    ObjectEnvironment:
      example:
        id: id
      properties:
        id:
          description: A string that specifies the environment associated with the
            object.
          readOnly: true
          type: string
      readOnly: true
    P1Error:
      example:
        code: code
        details:
        - code: code
          innerError:
            allowedValues:
            - allowedValues
            - allowedValues
            rangeMaximumValue: 6
            referencedValues:
            - referencedValues
            - referencedValues
            allowedPattern: allowedPattern
            maximumValue: 1
            rangeMinimumValue: 0
          message: message
          target: target
        - code: code
          innerError:
            allowedValues:
            - allowedValues
            - allowedValues
            rangeMaximumValue: 6
            referencedValues:
            - referencedValues
            - referencedValues
            allowedPattern: allowedPattern
            maximumValue: 1
            rangeMinimumValue: 0
          message: message
          target: target
        id: id
        message: message
      properties:
        id:
          description: "A unique identifier that is stored in log files and always\
            \ included in an error response. This value can be used to track the error\
            \ received by the client, with server-side activity included for troubleshooting\
            \ purposes."
          type: string
        code:
          description: A general fault code which the client must handle to provide
            all exception handling routines and to localize messages for users. This
            code is common across all PingOne services and is human readable (such
            as a defined constant rather than a number).
          type: string
        message:
          description: A short description of the error. This message is intended
            to assist with debugging and is returned in English only.
          type: string
        details:
          description: Additional details about the error. Optional information to
            help resolve the error and to display to users.
          items:
            $ref: '#/components/schemas/P1Error_details_inner'
          type: array
    UserMFAEnabled:
      example:
        _links:
          key:
            href: https://openapi-generator.tech
        mfaEnabled: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        mfaEnabled:
          description: Whether multi-factor authentication is enabled. This attribute
            is set to `false` by default when the user is created.
          type: boolean
      required:
      - mfaEnabled
    readAllMFAPushCredentials_200_response__embedded:
      example:
        pushCredentials:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              href: https://openapi-generator.tech
          id: id
          type: APNS
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              href: https://openapi-generator.tech
          id: id
          type: APNS
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pushCredentials:
          items:
            $ref: '#/components/schemas/MFAPushCredentialResponse'
          type: array
    readAllMFAPushCredentials_200_response:
      example:
        size: 5.637376656633329
        _links:
          key:
            href: https://openapi-generator.tech
        _embedded:
          pushCredentials:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            _links:
              key:
                href: https://openapi-generator.tech
            id: id
            type: APNS
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            _links:
              key:
                href: https://openapi-generator.tech
            id: id
            type: APNS
            updatedAt: 2000-01-23T04:56:07.000+00:00
        count: 5.962133916683182
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        _embedded:
          $ref: '#/components/schemas/readAllMFAPushCredentials_200_response__embedded'
        count:
          type: number
        size:
          type: number
      x-pingidentity-paginatedresponse: true
    readDeviceAuthenticationPolicies_200_response__embedded:
      example:
        deviceAuthenticationPolicies:
        - voice:
            pairingDisabled: true
            otp:
              otpLength: 8
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: MINUTES
            enabled: true
            promptForNicknameOnPairing: true
          totp:
            pairingDisabled: true
            uriParameters:
              key: uriParameters
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
            enabled: true
            promptForNicknameOnPairing: true
          newDeviceNotification: NONE
          _links:
            key:
              href: https://openapi-generator.tech
          mobile:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              window:
                stepSize:
                  duration: 5
                  timeUnit: null
            enabled: true
            promptForNicknameOnPairing: true
            applications:
            - autoEnrollment:
                enabled: true
              pairingDisabled: true
              deviceAuthorization:
                extraVerification: permissive
                enabled: true
              pairingKeyLifetime:
                duration: 7
                timeUnit: MINUTES
              integrityDetection: permissive
              pushTimeout:
                duration: 65
                timeUnit: SECONDS
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 3
                  timeUnit: null
                count: 46
                timePeriod:
                  duration: 2
                  timeUnit: null
            - autoEnrollment:
                enabled: true
              pairingDisabled: true
              deviceAuthorization:
                extraVerification: permissive
                enabled: true
              pairingKeyLifetime:
                duration: 7
                timeUnit: MINUTES
              integrityDetection: permissive
              pushTimeout:
                duration: 65
                timeUnit: SECONDS
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 3
                  timeUnit: null
                count: 46
                timePeriod:
                  duration: 2
                  timeUnit: null
          fido2:
            fido2PolicyId: fido2PolicyId
            pairingDisabled: true
            enabled: true
            promptForNicknameOnPairing: true
          platform:
            pairingDisabled: true
            enabled: true
            fidoPolicyId: fidoPolicyId
          forSignOnPolicy: true
          environment:
            id: id
          default: true
          name: name
          sms:
            pairingDisabled: true
            otp:
              otpLength: 8
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: MINUTES
            enabled: true
            promptForNicknameOnPairing: true
          id: id
          securityKey:
            pairingDisabled: true
            enabled: true
            fidoPolicyId: fidoPolicyId
          email:
            pairingDisabled: true
            otp:
              otpLength: 8
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: MINUTES
            enabled: true
            promptForNicknameOnPairing: true
          authentication:
            deviceSelection: DEFAULT_TO_FIRST
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - voice:
            pairingDisabled: true
            otp:
              otpLength: 8
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: MINUTES
            enabled: true
            promptForNicknameOnPairing: true
          totp:
            pairingDisabled: true
            uriParameters:
              key: uriParameters
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
            enabled: true
            promptForNicknameOnPairing: true
          newDeviceNotification: NONE
          _links:
            key:
              href: https://openapi-generator.tech
          mobile:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              window:
                stepSize:
                  duration: 5
                  timeUnit: null
            enabled: true
            promptForNicknameOnPairing: true
            applications:
            - autoEnrollment:
                enabled: true
              pairingDisabled: true
              deviceAuthorization:
                extraVerification: permissive
                enabled: true
              pairingKeyLifetime:
                duration: 7
                timeUnit: MINUTES
              integrityDetection: permissive
              pushTimeout:
                duration: 65
                timeUnit: SECONDS
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 3
                  timeUnit: null
                count: 46
                timePeriod:
                  duration: 2
                  timeUnit: null
            - autoEnrollment:
                enabled: true
              pairingDisabled: true
              deviceAuthorization:
                extraVerification: permissive
                enabled: true
              pairingKeyLifetime:
                duration: 7
                timeUnit: MINUTES
              integrityDetection: permissive
              pushTimeout:
                duration: 65
                timeUnit: SECONDS
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 3
                  timeUnit: null
                count: 46
                timePeriod:
                  duration: 2
                  timeUnit: null
          fido2:
            fido2PolicyId: fido2PolicyId
            pairingDisabled: true
            enabled: true
            promptForNicknameOnPairing: true
          platform:
            pairingDisabled: true
            enabled: true
            fidoPolicyId: fidoPolicyId
          forSignOnPolicy: true
          environment:
            id: id
          default: true
          name: name
          sms:
            pairingDisabled: true
            otp:
              otpLength: 8
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: MINUTES
            enabled: true
            promptForNicknameOnPairing: true
          id: id
          securityKey:
            pairingDisabled: true
            enabled: true
            fidoPolicyId: fidoPolicyId
          email:
            pairingDisabled: true
            otp:
              otpLength: 8
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: MINUTES
            enabled: true
            promptForNicknameOnPairing: true
          authentication:
            deviceSelection: DEFAULT_TO_FIRST
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        deviceAuthenticationPolicies:
          items:
            $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          type: array
    readDeviceAuthenticationPolicies_200_response:
      example:
        size: 7.386281948385884
        _links:
          key:
            href: https://openapi-generator.tech
        _embedded:
          deviceAuthenticationPolicies:
          - voice:
              pairingDisabled: true
              otp:
                otpLength: 8
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: MINUTES
              enabled: true
              promptForNicknameOnPairing: true
            totp:
              pairingDisabled: true
              uriParameters:
                key: uriParameters
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
              enabled: true
              promptForNicknameOnPairing: true
            newDeviceNotification: NONE
            _links:
              key:
                href: https://openapi-generator.tech
            mobile:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                window:
                  stepSize:
                    duration: 5
                    timeUnit: null
              enabled: true
              promptForNicknameOnPairing: true
              applications:
              - autoEnrollment:
                  enabled: true
                pairingDisabled: true
                deviceAuthorization:
                  extraVerification: permissive
                  enabled: true
                pairingKeyLifetime:
                  duration: 7
                  timeUnit: MINUTES
                integrityDetection: permissive
                pushTimeout:
                  duration: 65
                  timeUnit: SECONDS
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 3
                    timeUnit: null
                  count: 46
                  timePeriod:
                    duration: 2
                    timeUnit: null
              - autoEnrollment:
                  enabled: true
                pairingDisabled: true
                deviceAuthorization:
                  extraVerification: permissive
                  enabled: true
                pairingKeyLifetime:
                  duration: 7
                  timeUnit: MINUTES
                integrityDetection: permissive
                pushTimeout:
                  duration: 65
                  timeUnit: SECONDS
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 3
                    timeUnit: null
                  count: 46
                  timePeriod:
                    duration: 2
                    timeUnit: null
            fido2:
              fido2PolicyId: fido2PolicyId
              pairingDisabled: true
              enabled: true
              promptForNicknameOnPairing: true
            platform:
              pairingDisabled: true
              enabled: true
              fidoPolicyId: fidoPolicyId
            forSignOnPolicy: true
            environment:
              id: id
            default: true
            name: name
            sms:
              pairingDisabled: true
              otp:
                otpLength: 8
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: MINUTES
              enabled: true
              promptForNicknameOnPairing: true
            id: id
            securityKey:
              pairingDisabled: true
              enabled: true
              fidoPolicyId: fidoPolicyId
            email:
              pairingDisabled: true
              otp:
                otpLength: 8
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: MINUTES
              enabled: true
              promptForNicknameOnPairing: true
            authentication:
              deviceSelection: DEFAULT_TO_FIRST
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voice:
              pairingDisabled: true
              otp:
                otpLength: 8
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: MINUTES
              enabled: true
              promptForNicknameOnPairing: true
            totp:
              pairingDisabled: true
              uriParameters:
                key: uriParameters
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
              enabled: true
              promptForNicknameOnPairing: true
            newDeviceNotification: NONE
            _links:
              key:
                href: https://openapi-generator.tech
            mobile:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                window:
                  stepSize:
                    duration: 5
                    timeUnit: null
              enabled: true
              promptForNicknameOnPairing: true
              applications:
              - autoEnrollment:
                  enabled: true
                pairingDisabled: true
                deviceAuthorization:
                  extraVerification: permissive
                  enabled: true
                pairingKeyLifetime:
                  duration: 7
                  timeUnit: MINUTES
                integrityDetection: permissive
                pushTimeout:
                  duration: 65
                  timeUnit: SECONDS
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 3
                    timeUnit: null
                  count: 46
                  timePeriod:
                    duration: 2
                    timeUnit: null
              - autoEnrollment:
                  enabled: true
                pairingDisabled: true
                deviceAuthorization:
                  extraVerification: permissive
                  enabled: true
                pairingKeyLifetime:
                  duration: 7
                  timeUnit: MINUTES
                integrityDetection: permissive
                pushTimeout:
                  duration: 65
                  timeUnit: SECONDS
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 3
                    timeUnit: null
                  count: 46
                  timePeriod:
                    duration: 2
                    timeUnit: null
            fido2:
              fido2PolicyId: fido2PolicyId
              pairingDisabled: true
              enabled: true
              promptForNicknameOnPairing: true
            platform:
              pairingDisabled: true
              enabled: true
              fidoPolicyId: fidoPolicyId
            forSignOnPolicy: true
            environment:
              id: id
            default: true
            name: name
            sms:
              pairingDisabled: true
              otp:
                otpLength: 8
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: MINUTES
              enabled: true
              promptForNicknameOnPairing: true
            id: id
            securityKey:
              pairingDisabled: true
              enabled: true
              fidoPolicyId: fidoPolicyId
            email:
              pairingDisabled: true
              otp:
                otpLength: 8
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: MINUTES
              enabled: true
              promptForNicknameOnPairing: true
            authentication:
              deviceSelection: DEFAULT_TO_FIRST
            updatedAt: 2000-01-23T04:56:07.000+00:00
        count: 4.145608029883936
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        _embedded:
          $ref: '#/components/schemas/readDeviceAuthenticationPolicies_200_response__embedded'
        count:
          type: number
        size:
          type: number
      x-pingidentity-paginatedresponse: true
    readFidoDevices_200_response__embedded:
      example:
        fidoDevicesMetadata:
        - null
        - null
      properties:
        fidoDevicesMetadata:
          items:
            $ref: '#/components/schemas/FIDODevice'
          type: array
    readFidoDevices_200_response:
      example:
        size: 6.027456183070403
        _links:
          key:
            href: https://openapi-generator.tech
        _embedded:
          fidoDevicesMetadata:
          - null
          - null
        count: 0.8008281904610115
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        _embedded:
          $ref: '#/components/schemas/readFidoDevices_200_response__embedded'
        count:
          type: number
        size:
          type: number
      x-pingidentity-paginatedresponse: true
    readFidoPolicies_200_response__embedded:
      example:
        fidoPolicies:
        - _links:
            key:
              href: https://openapi-generator.tech
          description: description
          enforceDuringAuthentication: false
          allowedAuthenticators:
          - id: id
          - id: id
          createdAt: 2000-01-23T04:56:07.000+00:00
          environment:
            id: id
          default: true
          _embedded: "{}"
          name: name
          attestationRequirements: NONE
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          residentKeyRequirement: DISCOURAGED
        - _links:
            key:
              href: https://openapi-generator.tech
          description: description
          enforceDuringAuthentication: false
          allowedAuthenticators:
          - id: id
          - id: id
          createdAt: 2000-01-23T04:56:07.000+00:00
          environment:
            id: id
          default: true
          _embedded: "{}"
          name: name
          attestationRequirements: NONE
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          residentKeyRequirement: DISCOURAGED
      properties:
        fidoPolicies:
          items:
            $ref: '#/components/schemas/FIDOPolicy'
          type: array
    readFidoPolicies_200_response:
      example:
        size: 6.027456183070403
        _links:
          key:
            href: https://openapi-generator.tech
        _embedded:
          fidoPolicies:
          - _links:
              key:
                href: https://openapi-generator.tech
            description: description
            enforceDuringAuthentication: false
            allowedAuthenticators:
            - id: id
            - id: id
            createdAt: 2000-01-23T04:56:07.000+00:00
            environment:
              id: id
            default: true
            _embedded: "{}"
            name: name
            attestationRequirements: NONE
            id: id
            updatedAt: 2000-01-23T04:56:07.000+00:00
            residentKeyRequirement: DISCOURAGED
          - _links:
              key:
                href: https://openapi-generator.tech
            description: description
            enforceDuringAuthentication: false
            allowedAuthenticators:
            - id: id
            - id: id
            createdAt: 2000-01-23T04:56:07.000+00:00
            environment:
              id: id
            default: true
            _embedded: "{}"
            name: name
            attestationRequirements: NONE
            id: id
            updatedAt: 2000-01-23T04:56:07.000+00:00
            residentKeyRequirement: DISCOURAGED
        count: 0.8008281904610115
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        _embedded:
          $ref: '#/components/schemas/readFidoPolicies_200_response__embedded'
        count:
          type: number
        size:
          type: number
      x-pingidentity-paginatedresponse: true
    readFIDO2Policies_200_response__embedded:
      example:
        fido2Policies:
        - authenticatorAttachment: PLATFORM
          userVerification:
            enforceDuringAuthentication: true
            option: REQUIRED
          _links:
            key:
              href: https://openapi-generator.tech
          userDisplayNameAttributes:
            attributes:
            - name: name
              subAttributes:
              - name: name
              - name: name
            - name: name
              subAttributes:
              - name: name
              - name: name
          description: description
          backupEligibility:
            allow: true
            enforceDuringAuthentication: true
          mdsAuthenticatorsRequirements:
            enforceDuringAuthentication: true
            allowedAuthenticators:
            - id: id
            - id: id
            option: NONE
          relyingPartyId: relyingPartyId
          deviceDisplayName: deviceDisplayName
          createdAt: 2000-01-23T04:56:07.000+00:00
          environment:
            id: id
          default: true
          name: name
          attestationRequirements: DIRECT
          id: id
          deviceAuthenticationPolicies:
          - deviceAuthenticationPolicies
          - deviceAuthenticationPolicies
          discoverableCredentials: DISCOURAGED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - authenticatorAttachment: PLATFORM
          userVerification:
            enforceDuringAuthentication: true
            option: REQUIRED
          _links:
            key:
              href: https://openapi-generator.tech
          userDisplayNameAttributes:
            attributes:
            - name: name
              subAttributes:
              - name: name
              - name: name
            - name: name
              subAttributes:
              - name: name
              - name: name
          description: description
          backupEligibility:
            allow: true
            enforceDuringAuthentication: true
          mdsAuthenticatorsRequirements:
            enforceDuringAuthentication: true
            allowedAuthenticators:
            - id: id
            - id: id
            option: NONE
          relyingPartyId: relyingPartyId
          deviceDisplayName: deviceDisplayName
          createdAt: 2000-01-23T04:56:07.000+00:00
          environment:
            id: id
          default: true
          name: name
          attestationRequirements: DIRECT
          id: id
          deviceAuthenticationPolicies:
          - deviceAuthenticationPolicies
          - deviceAuthenticationPolicies
          discoverableCredentials: DISCOURAGED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        fido2Policies:
          items:
            $ref: '#/components/schemas/FIDO2Policy'
          type: array
    readFIDO2Policies_200_response:
      example:
        size: 6.027456183070403
        _links:
          key:
            href: https://openapi-generator.tech
        _embedded:
          fido2Policies:
          - authenticatorAttachment: PLATFORM
            userVerification:
              enforceDuringAuthentication: true
              option: REQUIRED
            _links:
              key:
                href: https://openapi-generator.tech
            userDisplayNameAttributes:
              attributes:
              - name: name
                subAttributes:
                - name: name
                - name: name
              - name: name
                subAttributes:
                - name: name
                - name: name
            description: description
            backupEligibility:
              allow: true
              enforceDuringAuthentication: true
            mdsAuthenticatorsRequirements:
              enforceDuringAuthentication: true
              allowedAuthenticators:
              - id: id
              - id: id
              option: NONE
            relyingPartyId: relyingPartyId
            deviceDisplayName: deviceDisplayName
            createdAt: 2000-01-23T04:56:07.000+00:00
            environment:
              id: id
            default: true
            name: name
            attestationRequirements: DIRECT
            id: id
            deviceAuthenticationPolicies:
            - deviceAuthenticationPolicies
            - deviceAuthenticationPolicies
            discoverableCredentials: DISCOURAGED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - authenticatorAttachment: PLATFORM
            userVerification:
              enforceDuringAuthentication: true
              option: REQUIRED
            _links:
              key:
                href: https://openapi-generator.tech
            userDisplayNameAttributes:
              attributes:
              - name: name
                subAttributes:
                - name: name
                - name: name
              - name: name
                subAttributes:
                - name: name
                - name: name
            description: description
            backupEligibility:
              allow: true
              enforceDuringAuthentication: true
            mdsAuthenticatorsRequirements:
              enforceDuringAuthentication: true
              allowedAuthenticators:
              - id: id
              - id: id
              option: NONE
            relyingPartyId: relyingPartyId
            deviceDisplayName: deviceDisplayName
            createdAt: 2000-01-23T04:56:07.000+00:00
            environment:
              id: id
            default: true
            name: name
            attestationRequirements: DIRECT
            id: id
            deviceAuthenticationPolicies:
            - deviceAuthenticationPolicies
            - deviceAuthenticationPolicies
            discoverableCredentials: DISCOURAGED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        count: 0.8008281904610115
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/LinksHATEOAS_value'
          readOnly: true
          x-pingidentity-paginatedresponse-links: true
        _embedded:
          $ref: '#/components/schemas/readFIDO2Policies_200_response__embedded'
        count:
          type: number
        size:
          type: number
      x-pingidentity-paginatedresponse: true
    LinksHATEOAS_value:
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          description: The HREF of the link.
          format: uri
          type: string
      required:
      - href
    DeviceAuthenticationPolicyOfflineDevice_otp_lifeTime:
      example:
        duration: 0
        timeUnit: MINUTES
      properties:
        duration:
          description: The duration (number of time units) that the passcode is valid
            before it expires.
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicyOfflineDevice_otp_failure_coolDown:
      example:
        duration: 1
        timeUnit: null
      properties:
        duration:
          description: The duration (number of time units) the user is blocked after
            reaching the maximum number of passcode failures.
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicyOfflineDevice_otp_failure:
      example:
        count: 6
        coolDown:
          duration: 1
          timeUnit: null
      properties:
        count:
          description: "The maximum number of times that the OTP entry can fail for\
            \ a user, before they are blocked."
          type: integer
        coolDown:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure_coolDown'
      required:
      - coolDown
      - count
    DeviceAuthenticationPolicyOfflineDevice_otp:
      example:
        otpLength: 8
        failure:
          count: 6
          coolDown:
            duration: 1
            timeUnit: null
        lifeTime:
          duration: 0
          timeUnit: MINUTES
      properties:
        lifeTime:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_lifeTime'
        failure:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure'
        otpLength:
          default: 6
          description: "Used to specify the length of the OTP that is shown to users.\
            \ Minimum length is `6` digits and maximum is `10` digits. If the parameter\
            \ is not provided, the default is `6` digits."
          maximum: 10
          minimum: 6
          type: integer
      required:
      - failure
      - lifeTime
    DeviceAuthenticationPolicy_authentication:
      description: An object that contains the device selection settings.
      example:
        deviceSelection: DEFAULT_TO_FIRST
      properties:
        deviceSelection:
          $ref: '#/components/schemas/EnumMFADevicePolicySelection'
      required:
      - deviceSelection
    DeviceAuthenticationPolicy_fido2:
      example:
        fido2PolicyId: fido2PolicyId
        pairingDisabled: true
        enabled: true
        promptForNicknameOnPairing: true
      properties:
        enabled:
          description: A boolean that specifies whether the method is enabled or disabled
            in the policy.
          type: boolean
        pairingDisabled:
          description: You can set `pairingDisabled` to true to prevent users from
            pairing new devices with the relevant method. You can use this option
            if you want to phase out an existing authentication method but want to
            allow users to continue using the method for authentication for existing
            devices.
          type: boolean
        fido2PolicyId:
          description: "Specifies the UUID that represents the FIDO2 policy in PingOne.\
            \ This property can be null. When null, the environment's default FIDO2\
            \ Policy is used."
          type: string
        promptForNicknameOnPairing:
          description: Set to `true` if you want to allow users to provide nicknames
            for devices during pairing.
          type: boolean
      required:
      - enabled
    DeviceAuthenticationPolicy_mobile_otp_window_stepSize:
      example:
        duration: 5
        timeUnit: null
      properties:
        duration:
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicy_mobile_otp_window:
      example:
        stepSize:
          duration: 5
          timeUnit: null
      properties:
        stepSize:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_otp_window_stepSize'
      required:
      - stepSize
    DeviceAuthenticationPolicy_mobile_otp:
      example:
        failure:
          count: 6
          coolDown:
            duration: 1
            timeUnit: null
        window:
          stepSize:
            duration: 5
            timeUnit: null
      properties:
        failure:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure'
        window:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_otp_window'
      required:
      - failure
    DeviceAuthenticationPolicy_mobile_applications_inner_push:
      example:
        enabled: true
      properties:
        enabled:
          description: Specifies whether push notification is enabled or disabled
            for the policy.
          type: boolean
      required:
      - enabled
    DeviceAuthenticationPolicy_mobile_applications_inner_pushTimeout:
      example:
        duration: 65
        timeUnit: SECONDS
      properties:
        duration:
          default: 40
          description: "The amount of time a user has to respond to a push notification\
            \ before it expires. Minimum is 40 seconds and maximum is 150 seconds.\
            \ If this parameter is not provided, the duration is set to 40 seconds."
          maximum: 150
          minimum: 40
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnitPushTimeout'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicy_mobile_applications_inner_pairingKeyLifetime:
      example:
        duration: 7
        timeUnit: MINUTES
      properties:
        duration:
          default: 10
          description: "The amount of time an issued pairing key can be used until\
            \ it expires. Minimum is 1 minute and maximum is 48 hours. If this parameter\
            \ is not provided, the duration is set to 10 minutes."
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnitPairingKeyLifetime'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_lockDuration:
      example:
        duration: 3
        timeUnit: null
      properties:
        duration:
          default: 30
          description: "The length of time that push notifications should be blocked\
            \ for the application if the defined limit has been reached. The minimum\
            \ value is 1 minute and the maximum value is 120 minutes. If this parameter\
            \ is not provided, the default value is 30 minutes."
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_timePeriod:
      example:
        duration: 2
        timeUnit: null
      properties:
        duration:
          default: 10
          description: "The time period in which the push notifications are counted\
            \ towards the defined limit. The minimum value is 1 minute and the maximum\
            \ value is 120 minutes. If this parameter is not provided, the default\
            \ value is 10 minutes."
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
    DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit:
      example:
        lockDuration:
          duration: 3
          timeUnit: null
        count: 46
        timePeriod:
          duration: 2
          timeUnit: null
      properties:
        count:
          default: 5
          description: "The number of consecutive push notifications that can be ignored\
            \ or rejected by a user within a defined period before push notifications\
            \ are blocked for the application. The minimum value is 1 and the maximum\
            \ value is 50. If this parameter is not provided, the default value is\
            \ 5."
          maximum: 50
          minimum: 1
          type: integer
        lockDuration:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_lockDuration'
        timePeriod:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_timePeriod'
    DeviceAuthenticationPolicy_mobile_applications_inner_otp:
      example:
        enabled: true
      properties:
        enabled:
          description: Specifies whether OTP authentication is enabled or disabled
            for the policy.
          type: boolean
      required:
      - enabled
    DeviceAuthenticationPolicy_mobile_applications_inner_deviceAuthorization:
      example:
        extraVerification: permissive
        enabled: true
      properties:
        enabled:
          description: "Specifies the enabled or disabled state of automatic MFA for\
            \ native devices paired with the user, for the specified application."
          type: boolean
        extraVerification:
          $ref: '#/components/schemas/EnumMFADevicePolicyMobileExtraVerification'
      required:
      - enabled
    DeviceAuthenticationPolicy_mobile_applications_inner_autoEnrollment:
      example:
        enabled: true
      properties:
        enabled:
          description: "Set to true if you want the application to allow Auto Enrollment.\
            \ Auto Enrollment means that the user can authenticate for the first time\
            \ from an unpaired device, and the successful authentication will result\
            \ in the pairing of the device for MFA."
          type: boolean
      required:
      - enabled
    DeviceAuthenticationPolicy_mobile_applications_inner:
      example:
        autoEnrollment:
          enabled: true
        pairingDisabled: true
        deviceAuthorization:
          extraVerification: permissive
          enabled: true
        pairingKeyLifetime:
          duration: 7
          timeUnit: MINUTES
        integrityDetection: permissive
        pushTimeout:
          duration: 65
          timeUnit: SECONDS
        otp:
          enabled: true
        id: id
        push:
          enabled: true
        pushLimit:
          lockDuration:
            duration: 3
            timeUnit: null
          count: 46
          timePeriod:
            duration: 2
            timeUnit: null
      properties:
        id:
          description: The application's ID.
          type: string
        push:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_push'
        pushTimeout:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushTimeout'
        pairingKeyLifetime:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pairingKeyLifetime'
        pushLimit:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit'
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_otp'
        deviceAuthorization:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_deviceAuthorization'
        autoEnrollment:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_autoEnrollment'
        pairingDisabled:
          description: You can set `pairingDisabled` to true to prevent users from
            pairing new devices with the relevant method. You can use this option
            if you want to phase out an existing authentication method but want to
            allow users to continue using the method for authentication for existing
            devices.
          type: boolean
        integrityDetection:
          $ref: '#/components/schemas/EnumMFADevicePolicyMobileIntegrityDetection'
      required:
      - id
    DeviceAuthenticationPolicy_mobile:
      description: Mobile device authentication policy settings.
      example:
        otp:
          failure:
            count: 6
            coolDown:
              duration: 1
              timeUnit: null
          window:
            stepSize:
              duration: 5
              timeUnit: null
        enabled: true
        promptForNicknameOnPairing: true
        applications:
        - autoEnrollment:
            enabled: true
          pairingDisabled: true
          deviceAuthorization:
            extraVerification: permissive
            enabled: true
          pairingKeyLifetime:
            duration: 7
            timeUnit: MINUTES
          integrityDetection: permissive
          pushTimeout:
            duration: 65
            timeUnit: SECONDS
          otp:
            enabled: true
          id: id
          push:
            enabled: true
          pushLimit:
            lockDuration:
              duration: 3
              timeUnit: null
            count: 46
            timePeriod:
              duration: 2
              timeUnit: null
        - autoEnrollment:
            enabled: true
          pairingDisabled: true
          deviceAuthorization:
            extraVerification: permissive
            enabled: true
          pairingKeyLifetime:
            duration: 7
            timeUnit: MINUTES
          integrityDetection: permissive
          pushTimeout:
            duration: 65
            timeUnit: SECONDS
          otp:
            enabled: true
          id: id
          push:
            enabled: true
          pushLimit:
            lockDuration:
              duration: 3
              timeUnit: null
            count: 46
            timePeriod:
              duration: 2
              timeUnit: null
      properties:
        enabled:
          description: A boolean that specifies whether the method is enabled or disabled
            in the policy.
          type: boolean
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_otp'
        applications:
          items:
            $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner'
          type: array
        promptForNicknameOnPairing:
          description: Set to `true` if you want to allow users to provide nicknames
            for devices during pairing.
          type: boolean
      required:
      - enabled
      - otp
    DeviceAuthenticationPolicy_totp_otp:
      example:
        failure:
          count: 6
          coolDown:
            duration: 1
            timeUnit: null
      properties:
        failure:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure'
      required:
      - failure
    DeviceAuthenticationPolicy_totp:
      description: TOTP device authentication policy settings.
      example:
        pairingDisabled: true
        uriParameters:
          key: uriParameters
        otp:
          failure:
            count: 6
            coolDown:
              duration: 1
              timeUnit: null
        enabled: true
        promptForNicknameOnPairing: true
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        pairingDisabled:
          description: You can set `pairingDisabled` to true to prevent users from
            pairing new devices with the relevant method. You can use this option
            if you want to phase out an existing authentication method but want to
            allow users to continue using the method for authentication for existing
            devices.
          type: boolean
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_totp_otp'
        promptForNicknameOnPairing:
          description: Set to `true` if you want to allow users to provide nicknames
            for devices during pairing.
          type: boolean
        uriParameters:
          additionalProperties:
            type: string
          description: "Object that you can use to provide key:value pairs for `otpauth`\
            \ URI parameters. For example, if you provide a value for the `issuer`\
            \ parameter, then authenticators that support that parameter will display\
            \ the text you specify together with the OTP (in addition to the username).\
            \ This can help users recognize which application the OTP is for. If you\
            \ intend on using the same MFA policy for multiple applications, choose\
            \ a name that reflects the group of applications."
      required:
      - enabled
      - otp
    FIDOPolicy_allowedAuthenticators_inner:
      example:
        id: id
      properties:
        id:
          description: The identifier of the authenticator to allow.
          type: string
      required:
      - id
    FIDO2Policy_backupEligibility:
      description: "Used to control whether users should be allowed to register and\
        \ authenticate with a device that uses cloud-synced credentials, such as a\
        \ passkey."
      example:
        allow: true
        enforceDuringAuthentication: true
      properties:
        allow:
          description: Set to `true` if you want to let users register and authenticate
            with a device that uses cloud-synced credentials. Set to `false` if you
            don't want to allow this.
          type: boolean
        enforceDuringAuthentication:
          description: Set to `true` if you want the backup eligibility of the device
            to be checked again at each authentication attempt and not just once during
            registration. Set to `false` to have it checked only at registration.
          type: boolean
      required:
      - allow
      - enforceDuringAuthentication
    FIDO2Policy_mdsAuthenticatorsRequirements_allowedAuthenticators_inner:
      example:
        id: id
      properties:
        id:
          description: The mdsIdentitfer of the authenticator to allow.
          type: string
      required:
      - id
    FIDO2Policy_mdsAuthenticatorsRequirements:
      description: "Used to specify whether attestation is requested from the authenticator,\
        \ and whether this information is used to restrict authenticator usage."
      example:
        enforceDuringAuthentication: true
        allowedAuthenticators:
        - id: id
        - id: id
        option: NONE
      properties:
        allowedAuthenticators:
          description: "If you set `mdsAuthenticatorsRequirements.option` to `SPECIFIC`,\
            \ use this array to specify the authenticators that you want to allow."
          items:
            $ref: '#/components/schemas/FIDO2Policy_mdsAuthenticatorsRequirements_allowedAuthenticators_inner'
          type: array
        enforceDuringAuthentication:
          description: Set to true if you want the device characteristics related
            to attestation to be checked again at each authentication attempt and
            not just once during registration. Set to false to have them checked only
            at registration.
          type: boolean
        option:
          $ref: '#/components/schemas/EnumFIDO2PolicyMDSAuthenticatorOption'
      required:
      - enforceDuringAuthentication
      - option
    FIDO2Policy_userDisplayNameAttributes_attributes_inner_subAttributes_inner:
      example:
        name: name
      properties:
        name:
          description: The name of the sub-attribute to use for the user display name.
          type: string
      required:
      - name
    FIDO2Policy_userDisplayNameAttributes_attributes_inner:
      example:
        name: name
        subAttributes:
        - name: name
        - name: name
      properties:
        name:
          description: The name of the attribute to use for the user display name.
          type: string
        subAttributes:
          description: The sub-attributes to use for the user display name.
          items:
            $ref: '#/components/schemas/FIDO2Policy_userDisplayNameAttributes_attributes_inner_subAttributes_inner'
          type: array
      required:
      - name
    FIDO2Policy_userDisplayNameAttributes:
      description: Used to specify the string associated with the users's account
        that is displayed during registration and authentication.
      example:
        attributes:
        - name: name
          subAttributes:
          - name: name
          - name: name
        - name: name
          subAttributes:
          - name: name
          - name: name
      properties:
        attributes:
          description: |
            List of strings associated with the users's account that can be displayed during registration and authentication. Each object in the array is a name:value pair where the first part is "name" and the second is the name of the user attribute, for example, `{"name": "username"}`, `{"name": "email"}`. If you want to use the "name" attribute for the user, you must also specify the "subAttributes", which can be either the "given" and "family" user attributes or the "formatted" user attribute. For example, `{"name": “name”, “subAttributes”:[{“name”: “given”}, {“name”: “family”}]}, {"name": "email"}` or `{"name": “name”, “subAttributes”:[{“name”: “formatted”}]}, {"name": "email"}`.
            - The content of the list should reflect the preferred order.
            - If the first attribute is empty for the user, PingOne will continue through the list until a non-empty attribute is found.
            - You can specify any user attribute (including custom attributes) that meet the following criteria: attribute type must be String, validation cannot be set to enumerated values.
            - The array must contain the user attribute "username" - to ensure that there is at least one non-empty attribute.
            - You can have a maximum of six user attributes in the list.
          items:
            $ref: '#/components/schemas/FIDO2Policy_userDisplayNameAttributes_attributes_inner'
          type: array
      required:
      - attributes
    FIDO2Policy_userVerification:
      description: "Used to control whether the user must perform a gesture (such\
        \ as a public key credential, fingerprint scan, or a PIN code) when registering\
        \ or authenticating with their FIDO device."
      example:
        enforceDuringAuthentication: true
        option: REQUIRED
      properties:
        enforceDuringAuthentication:
          description: Set to `true` if you want the device characteristics related
            to user verification to be checked again at each authentication attempt
            and not just once during registration. Set to `false` to have them checked
            only at registration.
          type: boolean
        option:
          $ref: '#/components/schemas/EnumFIDO2PolicyUserVerificationOption'
      required:
      - enforceDuringAuthentication
      - option
    MFASettings_authentication:
      deprecated: true
      description: An object that contains the device selection settings.
      example:
        deviceSelection: DEFAULT_TO_FIRST
      properties:
        deviceSelection:
          $ref: '#/components/schemas/EnumMFASettingsDeviceSelection'
      required:
      - deviceSelection
    MFASettings_lockout:
      description: An object that contains lockout settings.
      example:
        durationSeconds: 6
        failureCount: 0
      properties:
        failureCount:
          description: An integer that defines the maximum number of incorrect authentication
            attempts before the account is locked.
          type: integer
        durationSeconds:
          description: An integer that defines the number of seconds to keep the account
            in a locked state.
          type: integer
      required:
      - failureCount
    MFASettings_pairing:
      description: An object that contains pairing settings.
      example:
        pairingKeyFormat: NUMERIC
        maxAllowedDevices: 2
      properties:
        maxAllowedDevices:
          default: 5
          description: An integer that defines the maximum number of MFA devices each
            user can have. This can be any number up to 15. The default value is 5.
          maximum: 15
          type: integer
        pairingKeyFormat:
          $ref: '#/components/schemas/EnumMFASettingsPairingKeyFormat'
      required:
      - maxAllowedDevices
      - pairingKeyFormat
    MFASettings_phoneExtensions:
      description: Contains settings for phone extension support.
      example:
        enabled: true
      properties:
        enabled:
          description: "Set to `true` to allow one-time passwords to be delivered\
            \ via voice to phone numbers that include extensions. Set to `false` to\
            \ disable support for phone numbers with extensions. By default, support\
            \ for extensions is disabled."
          type: boolean
    MFASettings_users:
      description: Contains information about the default settings for new users.
      example:
        mfaEnabled: true
      properties:
        mfaEnabled:
          description: Set `mfaEnabled` to `true` if you want MFA to be enabled by
            default for new users.
          type: boolean
    P1Error_details_inner_innerError:
      description: Additional details to help the client developer resolve the fault
        (primarily for UI validation reasons).
      example:
        allowedValues:
        - allowedValues
        - allowedValues
        rangeMaximumValue: 6
        referencedValues:
        - referencedValues
        - referencedValues
        allowedPattern: allowedPattern
        maximumValue: 1
        rangeMinimumValue: 0
      properties:
        rangeMinimumValue:
          description: Errors that failed due to range violation. This attribute represents
            the minimum value of the range.
          type: integer
        rangeMaximumValue:
          description: The maximum range or value of an attribute.
          type: integer
        allowedPattern:
          description: A regex pattern describing an acceptable input pattern.
          type: string
        allowedValues:
          description: A list describing acceptable values.
          items:
            type: string
          type: array
        maximumValue:
          description: The maximum value allowed for the request.
          type: integer
        referencedValues:
          items:
            type: string
          type: array
    P1Error_details_inner:
      example:
        code: code
        innerError:
          allowedValues:
          - allowedValues
          - allowedValues
          rangeMaximumValue: 6
          referencedValues:
          - referencedValues
          - referencedValues
          allowedPattern: allowedPattern
          maximumValue: 1
          rangeMinimumValue: 0
        message: message
        target: target
      properties:
        code:
          description: A general fault code which the client must handle to provide
            all exception handling routines and to localize messages for users. This
            code is common across all PingOne services and is human readable (such
            as a defined constant rather than a number).
          type: string
        target:
          description: The item that caused the error (such as a form field ID or
            an attribute inside a JSON object).
          type: string
        message:
          description: A short description of the error. This message is intended
            to assist with debugging and is returned in English only.
          type: string
        innerError:
          $ref: '#/components/schemas/P1Error_details_inner_innerError'
  securitySchemes:
    bearer:
      bearerFormat: JWT
      description: OAuth bearer token (see documentation)
      scheme: bearer
      type: http
