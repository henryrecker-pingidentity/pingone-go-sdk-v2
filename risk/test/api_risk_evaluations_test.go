/*
PingOne Platform API - PingOne Risk

Testing RiskEvaluationsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package risk

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/patrickcping/pingone-go-sdk-v2/risk"
)

func Test_risk_RiskEvaluationsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RiskEvaluationsApiService CreateRiskEvaluation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentID string

		resp, httpRes, err := apiClient.RiskEvaluationsApi.CreateRiskEvaluation(context.Background(), environmentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RiskEvaluationsApiService ReadOneRiskEvaluation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentID string
		var riskEvaluationID string

		resp, httpRes, err := apiClient.RiskEvaluationsApi.ReadOneRiskEvaluation(context.Background(), environmentID, riskEvaluationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RiskEvaluationsApiService UpdateRiskEvaluation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentID string
		var riskEvaluationID string

		resp, httpRes, err := apiClient.RiskEvaluationsApi.UpdateRiskEvaluation(context.Background(), environmentID, riskEvaluationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
