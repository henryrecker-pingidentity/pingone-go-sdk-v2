/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the ReadRiskPolicySets200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadRiskPolicySets200ResponseEmbedded{}

// ReadRiskPolicySets200ResponseEmbedded struct for ReadRiskPolicySets200ResponseEmbedded
type ReadRiskPolicySets200ResponseEmbedded struct {
	RiskPolicySets []RiskPolicySet `json:"riskPolicySets,omitempty"`
}

// NewReadRiskPolicySets200ResponseEmbedded instantiates a new ReadRiskPolicySets200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadRiskPolicySets200ResponseEmbedded() *ReadRiskPolicySets200ResponseEmbedded {
	this := ReadRiskPolicySets200ResponseEmbedded{}
	return &this
}

// NewReadRiskPolicySets200ResponseEmbeddedWithDefaults instantiates a new ReadRiskPolicySets200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadRiskPolicySets200ResponseEmbeddedWithDefaults() *ReadRiskPolicySets200ResponseEmbedded {
	this := ReadRiskPolicySets200ResponseEmbedded{}
	return &this
}

// GetRiskPolicySets returns the RiskPolicySets field value if set, zero value otherwise.
func (o *ReadRiskPolicySets200ResponseEmbedded) GetRiskPolicySets() []RiskPolicySet {
	if o == nil || IsNil(o.RiskPolicySets) {
		var ret []RiskPolicySet
		return ret
	}
	return o.RiskPolicySets
}

// GetRiskPolicySetsOk returns a tuple with the RiskPolicySets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadRiskPolicySets200ResponseEmbedded) GetRiskPolicySetsOk() ([]RiskPolicySet, bool) {
	if o == nil || IsNil(o.RiskPolicySets) {
		return nil, false
	}
	return o.RiskPolicySets, true
}

// HasRiskPolicySets returns a boolean if a field has been set.
func (o *ReadRiskPolicySets200ResponseEmbedded) HasRiskPolicySets() bool {
	if o != nil && !IsNil(o.RiskPolicySets) {
		return true
	}

	return false
}

// SetRiskPolicySets gets a reference to the given []RiskPolicySet and assigns it to the RiskPolicySets field.
func (o *ReadRiskPolicySets200ResponseEmbedded) SetRiskPolicySets(v []RiskPolicySet) {
	o.RiskPolicySets = v
}

func (o ReadRiskPolicySets200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadRiskPolicySets200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RiskPolicySets) {
		toSerialize["riskPolicySets"] = o.RiskPolicySets
	}
	return toSerialize, nil
}

type NullableReadRiskPolicySets200ResponseEmbedded struct {
	value *ReadRiskPolicySets200ResponseEmbedded
	isSet bool
}

func (v NullableReadRiskPolicySets200ResponseEmbedded) Get() *ReadRiskPolicySets200ResponseEmbedded {
	return v.value
}

func (v *NullableReadRiskPolicySets200ResponseEmbedded) Set(val *ReadRiskPolicySets200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableReadRiskPolicySets200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableReadRiskPolicySets200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadRiskPolicySets200ResponseEmbedded(val *ReadRiskPolicySets200ResponseEmbedded) *NullableReadRiskPolicySets200ResponseEmbedded {
	return &NullableReadRiskPolicySets200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableReadRiskPolicySets200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadRiskPolicySets200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


