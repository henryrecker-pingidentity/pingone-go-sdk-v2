/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
)

// checks if the ReadAllDigitalWallets200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadAllDigitalWallets200ResponseEmbedded{}

// ReadAllDigitalWallets200ResponseEmbedded struct for ReadAllDigitalWallets200ResponseEmbedded
type ReadAllDigitalWallets200ResponseEmbedded struct {
	DigitalWallets []CredentialDigitalWallet `json:"digitalWallets,omitempty"`
}

// NewReadAllDigitalWallets200ResponseEmbedded instantiates a new ReadAllDigitalWallets200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadAllDigitalWallets200ResponseEmbedded() *ReadAllDigitalWallets200ResponseEmbedded {
	this := ReadAllDigitalWallets200ResponseEmbedded{}
	return &this
}

// NewReadAllDigitalWallets200ResponseEmbeddedWithDefaults instantiates a new ReadAllDigitalWallets200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadAllDigitalWallets200ResponseEmbeddedWithDefaults() *ReadAllDigitalWallets200ResponseEmbedded {
	this := ReadAllDigitalWallets200ResponseEmbedded{}
	return &this
}

// GetDigitalWallets returns the DigitalWallets field value if set, zero value otherwise.
func (o *ReadAllDigitalWallets200ResponseEmbedded) GetDigitalWallets() []CredentialDigitalWallet {
	if o == nil || IsNil(o.DigitalWallets) {
		var ret []CredentialDigitalWallet
		return ret
	}
	return o.DigitalWallets
}

// GetDigitalWalletsOk returns a tuple with the DigitalWallets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadAllDigitalWallets200ResponseEmbedded) GetDigitalWalletsOk() ([]CredentialDigitalWallet, bool) {
	if o == nil || IsNil(o.DigitalWallets) {
		return nil, false
	}
	return o.DigitalWallets, true
}

// HasDigitalWallets returns a boolean if a field has been set.
func (o *ReadAllDigitalWallets200ResponseEmbedded) HasDigitalWallets() bool {
	if o != nil && !IsNil(o.DigitalWallets) {
		return true
	}

	return false
}

// SetDigitalWallets gets a reference to the given []CredentialDigitalWallet and assigns it to the DigitalWallets field.
func (o *ReadAllDigitalWallets200ResponseEmbedded) SetDigitalWallets(v []CredentialDigitalWallet) {
	o.DigitalWallets = v
}

func (o ReadAllDigitalWallets200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadAllDigitalWallets200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DigitalWallets) {
		toSerialize["digitalWallets"] = o.DigitalWallets
	}
	return toSerialize, nil
}

type NullableReadAllDigitalWallets200ResponseEmbedded struct {
	value *ReadAllDigitalWallets200ResponseEmbedded
	isSet bool
}

func (v NullableReadAllDigitalWallets200ResponseEmbedded) Get() *ReadAllDigitalWallets200ResponseEmbedded {
	return v.value
}

func (v *NullableReadAllDigitalWallets200ResponseEmbedded) Set(val *ReadAllDigitalWallets200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableReadAllDigitalWallets200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableReadAllDigitalWallets200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadAllDigitalWallets200ResponseEmbedded(val *ReadAllDigitalWallets200ResponseEmbedded) *NullableReadAllDigitalWallets200ResponseEmbedded {
	return &NullableReadAllDigitalWallets200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableReadAllDigitalWallets200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadAllDigitalWallets200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


