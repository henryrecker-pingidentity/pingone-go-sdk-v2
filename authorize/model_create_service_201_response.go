/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// CreateService201Response - struct for CreateService201Response
type CreateService201Response struct {
	AuthorizeEditorDataServicesConnectorServiceDefinitionDTO *AuthorizeEditorDataServicesConnectorServiceDefinitionDTO
	AuthorizeEditorDataServicesHttpServiceDefinitionDTO *AuthorizeEditorDataServicesHttpServiceDefinitionDTO
	AuthorizeEditorDataServicesNoneServiceDefinitionDTO *AuthorizeEditorDataServicesNoneServiceDefinitionDTO
}

// AuthorizeEditorDataServicesConnectorServiceDefinitionDTOAsCreateService201Response is a convenience function that returns AuthorizeEditorDataServicesConnectorServiceDefinitionDTO wrapped in CreateService201Response
func AuthorizeEditorDataServicesConnectorServiceDefinitionDTOAsCreateService201Response(v *AuthorizeEditorDataServicesConnectorServiceDefinitionDTO) CreateService201Response {
	return CreateService201Response{
		AuthorizeEditorDataServicesConnectorServiceDefinitionDTO: v,
	}
}

// AuthorizeEditorDataServicesHttpServiceDefinitionDTOAsCreateService201Response is a convenience function that returns AuthorizeEditorDataServicesHttpServiceDefinitionDTO wrapped in CreateService201Response
func AuthorizeEditorDataServicesHttpServiceDefinitionDTOAsCreateService201Response(v *AuthorizeEditorDataServicesHttpServiceDefinitionDTO) CreateService201Response {
	return CreateService201Response{
		AuthorizeEditorDataServicesHttpServiceDefinitionDTO: v,
	}
}

// AuthorizeEditorDataServicesNoneServiceDefinitionDTOAsCreateService201Response is a convenience function that returns AuthorizeEditorDataServicesNoneServiceDefinitionDTO wrapped in CreateService201Response
func AuthorizeEditorDataServicesNoneServiceDefinitionDTOAsCreateService201Response(v *AuthorizeEditorDataServicesNoneServiceDefinitionDTO) CreateService201Response {
	return CreateService201Response{
		AuthorizeEditorDataServicesNoneServiceDefinitionDTO: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateService201Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AuthorizeEditorDataServicesConnectorServiceDefinitionDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO)
	if err == nil {
		jsonAuthorizeEditorDataServicesConnectorServiceDefinitionDTO, _ := json.Marshal(dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO)
		if string(jsonAuthorizeEditorDataServicesConnectorServiceDefinitionDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataServicesHttpServiceDefinitionDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO)
	if err == nil {
		jsonAuthorizeEditorDataServicesHttpServiceDefinitionDTO, _ := json.Marshal(dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO)
		if string(jsonAuthorizeEditorDataServicesHttpServiceDefinitionDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataServicesNoneServiceDefinitionDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO)
	if err == nil {
		jsonAuthorizeEditorDataServicesNoneServiceDefinitionDTO, _ := json.Marshal(dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO)
		if string(jsonAuthorizeEditorDataServicesNoneServiceDefinitionDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO = nil
		dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO = nil
		dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateService201Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateService201Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateService201Response) MarshalJSON() ([]byte, error) {
	if src.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO)
	}

	if src.AuthorizeEditorDataServicesHttpServiceDefinitionDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataServicesHttpServiceDefinitionDTO)
	}

	if src.AuthorizeEditorDataServicesNoneServiceDefinitionDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataServicesNoneServiceDefinitionDTO)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateService201Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO != nil {
		return obj.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO
	}

	if obj.AuthorizeEditorDataServicesHttpServiceDefinitionDTO != nil {
		return obj.AuthorizeEditorDataServicesHttpServiceDefinitionDTO
	}

	if obj.AuthorizeEditorDataServicesNoneServiceDefinitionDTO != nil {
		return obj.AuthorizeEditorDataServicesNoneServiceDefinitionDTO
	}

	// all schemas are nil
	return nil
}

type NullableCreateService201Response struct {
	value *CreateService201Response
	isSet bool
}

func (v NullableCreateService201Response) Get() *CreateService201Response {
	return v.value
}

func (v *NullableCreateService201Response) Set(val *CreateService201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateService201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateService201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateService201Response(val *CreateService201Response) *NullableCreateService201Response {
	return &NullableCreateService201Response{value: val, isSet: true}
}

func (v NullableCreateService201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateService201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


