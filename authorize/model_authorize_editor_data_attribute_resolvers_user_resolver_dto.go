/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataAttributeResolversUserResolverDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataAttributeResolversUserResolverDTO{}

// AuthorizeEditorDataAttributeResolversUserResolverDTO struct for AuthorizeEditorDataAttributeResolversUserResolverDTO
type AuthorizeEditorDataAttributeResolversUserResolverDTO struct {
	AuthorizeEditorDataResolverDTO
	Query AuthorizeEditorDataAttributeResolversUserQueryDTO `json:"query"`
}

// NewAuthorizeEditorDataAttributeResolversUserResolverDTO instantiates a new AuthorizeEditorDataAttributeResolversUserResolverDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataAttributeResolversUserResolverDTO(query AuthorizeEditorDataAttributeResolversUserQueryDTO, type_ string) *AuthorizeEditorDataAttributeResolversUserResolverDTO {
	this := AuthorizeEditorDataAttributeResolversUserResolverDTO{}
	this.Type = type_
	this.Query = query
	return &this
}

// NewAuthorizeEditorDataAttributeResolversUserResolverDTOWithDefaults instantiates a new AuthorizeEditorDataAttributeResolversUserResolverDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataAttributeResolversUserResolverDTOWithDefaults() *AuthorizeEditorDataAttributeResolversUserResolverDTO {
	this := AuthorizeEditorDataAttributeResolversUserResolverDTO{}
	return &this
}

// GetQuery returns the Query field value
func (o *AuthorizeEditorDataAttributeResolversUserResolverDTO) GetQuery() AuthorizeEditorDataAttributeResolversUserQueryDTO {
	if o == nil {
		var ret AuthorizeEditorDataAttributeResolversUserQueryDTO
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAttributeResolversUserResolverDTO) GetQueryOk() (*AuthorizeEditorDataAttributeResolversUserQueryDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *AuthorizeEditorDataAttributeResolversUserResolverDTO) SetQuery(v AuthorizeEditorDataAttributeResolversUserQueryDTO) {
	o.Query = v
}

func (o AuthorizeEditorDataAttributeResolversUserResolverDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataAttributeResolversUserResolverDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAuthorizeEditorDataResolverDTO, errAuthorizeEditorDataResolverDTO := json.Marshal(o.AuthorizeEditorDataResolverDTO)
	if errAuthorizeEditorDataResolverDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataResolverDTO
	}
	errAuthorizeEditorDataResolverDTO = json.Unmarshal([]byte(serializedAuthorizeEditorDataResolverDTO), &toSerialize)
	if errAuthorizeEditorDataResolverDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataResolverDTO
	}
	toSerialize["query"] = o.Query
	return toSerialize, nil
}

type NullableAuthorizeEditorDataAttributeResolversUserResolverDTO struct {
	value *AuthorizeEditorDataAttributeResolversUserResolverDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataAttributeResolversUserResolverDTO) Get() *AuthorizeEditorDataAttributeResolversUserResolverDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataAttributeResolversUserResolverDTO) Set(val *AuthorizeEditorDataAttributeResolversUserResolverDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataAttributeResolversUserResolverDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataAttributeResolversUserResolverDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataAttributeResolversUserResolverDTO(val *AuthorizeEditorDataAttributeResolversUserResolverDTO) *NullableAuthorizeEditorDataAttributeResolversUserResolverDTO {
	return &NullableAuthorizeEditorDataAttributeResolversUserResolverDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataAttributeResolversUserResolverDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataAttributeResolversUserResolverDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


