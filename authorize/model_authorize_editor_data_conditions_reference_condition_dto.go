/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataConditionsReferenceConditionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataConditionsReferenceConditionDTO{}

// AuthorizeEditorDataConditionsReferenceConditionDTO struct for AuthorizeEditorDataConditionsReferenceConditionDTO
type AuthorizeEditorDataConditionsReferenceConditionDTO struct {
	AuthorizeEditorDataConditionDTO
	Reference AuthorizeEditorDataReferenceObjectDTO `json:"reference"`
}

// NewAuthorizeEditorDataConditionsReferenceConditionDTO instantiates a new AuthorizeEditorDataConditionsReferenceConditionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataConditionsReferenceConditionDTO(reference AuthorizeEditorDataReferenceObjectDTO, type_ EnumAuthorizeEditorDataConditionDTOType) *AuthorizeEditorDataConditionsReferenceConditionDTO {
	this := AuthorizeEditorDataConditionsReferenceConditionDTO{}
	this.Type = type_
	this.Reference = reference
	return &this
}

// NewAuthorizeEditorDataConditionsReferenceConditionDTOWithDefaults instantiates a new AuthorizeEditorDataConditionsReferenceConditionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataConditionsReferenceConditionDTOWithDefaults() *AuthorizeEditorDataConditionsReferenceConditionDTO {
	this := AuthorizeEditorDataConditionsReferenceConditionDTO{}
	return &this
}

// GetReference returns the Reference field value
func (o *AuthorizeEditorDataConditionsReferenceConditionDTO) GetReference() AuthorizeEditorDataReferenceObjectDTO {
	if o == nil {
		var ret AuthorizeEditorDataReferenceObjectDTO
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataConditionsReferenceConditionDTO) GetReferenceOk() (*AuthorizeEditorDataReferenceObjectDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *AuthorizeEditorDataConditionsReferenceConditionDTO) SetReference(v AuthorizeEditorDataReferenceObjectDTO) {
	o.Reference = v
}

func (o AuthorizeEditorDataConditionsReferenceConditionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataConditionsReferenceConditionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAuthorizeEditorDataConditionDTO, errAuthorizeEditorDataConditionDTO := json.Marshal(o.AuthorizeEditorDataConditionDTO)
	if errAuthorizeEditorDataConditionDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataConditionDTO
	}
	errAuthorizeEditorDataConditionDTO = json.Unmarshal([]byte(serializedAuthorizeEditorDataConditionDTO), &toSerialize)
	if errAuthorizeEditorDataConditionDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataConditionDTO
	}
	toSerialize["reference"] = o.Reference
	return toSerialize, nil
}

type NullableAuthorizeEditorDataConditionsReferenceConditionDTO struct {
	value *AuthorizeEditorDataConditionsReferenceConditionDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataConditionsReferenceConditionDTO) Get() *AuthorizeEditorDataConditionsReferenceConditionDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataConditionsReferenceConditionDTO) Set(val *AuthorizeEditorDataConditionsReferenceConditionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataConditionsReferenceConditionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataConditionsReferenceConditionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataConditionsReferenceConditionDTO(val *AuthorizeEditorDataConditionsReferenceConditionDTO) *NullableAuthorizeEditorDataConditionsReferenceConditionDTO {
	return &NullableAuthorizeEditorDataConditionsReferenceConditionDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataConditionsReferenceConditionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataConditionsReferenceConditionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


