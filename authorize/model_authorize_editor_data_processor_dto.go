/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// AuthorizeEditorDataProcessorDTO - struct for AuthorizeEditorDataProcessorDTO
type AuthorizeEditorDataProcessorDTO struct {
	AuthorizeEditorDataProcessorsChainProcessorDTO *AuthorizeEditorDataProcessorsChainProcessorDTO
	AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO *AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO
	AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO *AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO
	AuthorizeEditorDataProcessorsJsonPathProcessorDTO *AuthorizeEditorDataProcessorsJsonPathProcessorDTO
	AuthorizeEditorDataProcessorsReferenceProcessorDTO *AuthorizeEditorDataProcessorsReferenceProcessorDTO
	AuthorizeEditorDataProcessorsSpelProcessorDTO *AuthorizeEditorDataProcessorsSpelProcessorDTO
	AuthorizeEditorDataProcessorsXPathProcessorDTO *AuthorizeEditorDataProcessorsXPathProcessorDTO
}

// AuthorizeEditorDataProcessorsChainProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsChainProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsChainProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsChainProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsChainProcessorDTO: v,
	}
}

// AuthorizeEditorDataProcessorsCollectionFilterProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsCollectionFilterProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO: v,
	}
}

// AuthorizeEditorDataProcessorsCollectionTransformProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsCollectionTransformProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO: v,
	}
}

// AuthorizeEditorDataProcessorsJsonPathProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsJsonPathProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsJsonPathProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsJsonPathProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsJsonPathProcessorDTO: v,
	}
}

// AuthorizeEditorDataProcessorsReferenceProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsReferenceProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsReferenceProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsReferenceProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsReferenceProcessorDTO: v,
	}
}

// AuthorizeEditorDataProcessorsSpelProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsSpelProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsSpelProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsSpelProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsSpelProcessorDTO: v,
	}
}

// AuthorizeEditorDataProcessorsXPathProcessorDTOAsAuthorizeEditorDataProcessorDTO is a convenience function that returns AuthorizeEditorDataProcessorsXPathProcessorDTO wrapped in AuthorizeEditorDataProcessorDTO
func AuthorizeEditorDataProcessorsXPathProcessorDTOAsAuthorizeEditorDataProcessorDTO(v *AuthorizeEditorDataProcessorsXPathProcessorDTO) AuthorizeEditorDataProcessorDTO {
	return AuthorizeEditorDataProcessorDTO{
		AuthorizeEditorDataProcessorsXPathProcessorDTO: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AuthorizeEditorDataProcessorDTO) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AuthorizeEditorDataProcessorsChainProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsChainProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsChainProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsChainProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsChainProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsChainProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsChainProcessorDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsCollectionFilterProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsCollectionFilterProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsCollectionTransformProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsCollectionTransformProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataProcessorsJsonPathProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsJsonPathProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsJsonPathProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsJsonPathProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsJsonPathProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsJsonPathProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsJsonPathProcessorDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataProcessorsReferenceProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsReferenceProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsReferenceProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsReferenceProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsReferenceProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsReferenceProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsReferenceProcessorDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataProcessorsSpelProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsSpelProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsSpelProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsSpelProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsSpelProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsSpelProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsSpelProcessorDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataProcessorsXPathProcessorDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataProcessorsXPathProcessorDTO)
	if err == nil {
		jsonAuthorizeEditorDataProcessorsXPathProcessorDTO, _ := json.Marshal(dst.AuthorizeEditorDataProcessorsXPathProcessorDTO)
		if string(jsonAuthorizeEditorDataProcessorsXPathProcessorDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataProcessorsXPathProcessorDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataProcessorsXPathProcessorDTO = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AuthorizeEditorDataProcessorsChainProcessorDTO = nil
		dst.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO = nil
		dst.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO = nil
		dst.AuthorizeEditorDataProcessorsJsonPathProcessorDTO = nil
		dst.AuthorizeEditorDataProcessorsReferenceProcessorDTO = nil
		dst.AuthorizeEditorDataProcessorsSpelProcessorDTO = nil
		dst.AuthorizeEditorDataProcessorsXPathProcessorDTO = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AuthorizeEditorDataProcessorDTO)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AuthorizeEditorDataProcessorDTO)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AuthorizeEditorDataProcessorDTO) MarshalJSON() ([]byte, error) {
	if src.AuthorizeEditorDataProcessorsChainProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsChainProcessorDTO)
	}

	if src.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO)
	}

	if src.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO)
	}

	if src.AuthorizeEditorDataProcessorsJsonPathProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsJsonPathProcessorDTO)
	}

	if src.AuthorizeEditorDataProcessorsReferenceProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsReferenceProcessorDTO)
	}

	if src.AuthorizeEditorDataProcessorsSpelProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsSpelProcessorDTO)
	}

	if src.AuthorizeEditorDataProcessorsXPathProcessorDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataProcessorsXPathProcessorDTO)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AuthorizeEditorDataProcessorDTO) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthorizeEditorDataProcessorsChainProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsChainProcessorDTO
	}

	if obj.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsCollectionFilterProcessorDTO
	}

	if obj.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsCollectionTransformProcessorDTO
	}

	if obj.AuthorizeEditorDataProcessorsJsonPathProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsJsonPathProcessorDTO
	}

	if obj.AuthorizeEditorDataProcessorsReferenceProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsReferenceProcessorDTO
	}

	if obj.AuthorizeEditorDataProcessorsSpelProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsSpelProcessorDTO
	}

	if obj.AuthorizeEditorDataProcessorsXPathProcessorDTO != nil {
		return obj.AuthorizeEditorDataProcessorsXPathProcessorDTO
	}

	// all schemas are nil
	return nil
}

type NullableAuthorizeEditorDataProcessorDTO struct {
	value *AuthorizeEditorDataProcessorDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataProcessorDTO) Get() *AuthorizeEditorDataProcessorDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataProcessorDTO) Set(val *AuthorizeEditorDataProcessorDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataProcessorDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataProcessorDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataProcessorDTO(val *AuthorizeEditorDataProcessorDTO) *NullableAuthorizeEditorDataProcessorDTO {
	return &NullableAuthorizeEditorDataProcessorDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataProcessorDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataProcessorDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


