/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO{}

// AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO struct for AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO
type AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO struct {
	AuthorizeEditorDataResolverDTO
}

// NewAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO instantiates a new AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO(type_ string) *AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO {
	this := AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO{}
	this.Type = type_
	return &this
}

// NewAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTOWithDefaults instantiates a new AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTOWithDefaults() *AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO {
	this := AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO{}
	return &this
}

func (o AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAuthorizeEditorDataResolverDTO, errAuthorizeEditorDataResolverDTO := json.Marshal(o.AuthorizeEditorDataResolverDTO)
	if errAuthorizeEditorDataResolverDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataResolverDTO
	}
	errAuthorizeEditorDataResolverDTO = json.Unmarshal([]byte(serializedAuthorizeEditorDataResolverDTO), &toSerialize)
	if errAuthorizeEditorDataResolverDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataResolverDTO
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO struct {
	value *AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) Get() *AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) Set(val *AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO(val *AuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) *NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO {
	return &NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataAttributeResolversCurrentUserIDResolverDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


