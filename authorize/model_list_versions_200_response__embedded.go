/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the ListVersions200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVersions200ResponseEmbedded{}

// ListVersions200ResponseEmbedded struct for ListVersions200ResponseEmbedded
type ListVersions200ResponseEmbedded struct {
	AuthorizationVersions []AuthorizeEditorDataAuthorizationVersionDTO `json:"authorizationVersions,omitempty"`
}

// NewListVersions200ResponseEmbedded instantiates a new ListVersions200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVersions200ResponseEmbedded() *ListVersions200ResponseEmbedded {
	this := ListVersions200ResponseEmbedded{}
	return &this
}

// NewListVersions200ResponseEmbeddedWithDefaults instantiates a new ListVersions200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVersions200ResponseEmbeddedWithDefaults() *ListVersions200ResponseEmbedded {
	this := ListVersions200ResponseEmbedded{}
	return &this
}

// GetAuthorizationVersions returns the AuthorizationVersions field value if set, zero value otherwise.
func (o *ListVersions200ResponseEmbedded) GetAuthorizationVersions() []AuthorizeEditorDataAuthorizationVersionDTO {
	if o == nil || IsNil(o.AuthorizationVersions) {
		var ret []AuthorizeEditorDataAuthorizationVersionDTO
		return ret
	}
	return o.AuthorizationVersions
}

// GetAuthorizationVersionsOk returns a tuple with the AuthorizationVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVersions200ResponseEmbedded) GetAuthorizationVersionsOk() ([]AuthorizeEditorDataAuthorizationVersionDTO, bool) {
	if o == nil || IsNil(o.AuthorizationVersions) {
		return nil, false
	}
	return o.AuthorizationVersions, true
}

// HasAuthorizationVersions returns a boolean if a field has been set.
func (o *ListVersions200ResponseEmbedded) HasAuthorizationVersions() bool {
	if o != nil && !IsNil(o.AuthorizationVersions) {
		return true
	}

	return false
}

// SetAuthorizationVersions gets a reference to the given []AuthorizeEditorDataAuthorizationVersionDTO and assigns it to the AuthorizationVersions field.
func (o *ListVersions200ResponseEmbedded) SetAuthorizationVersions(v []AuthorizeEditorDataAuthorizationVersionDTO) {
	o.AuthorizationVersions = v
}

func (o ListVersions200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVersions200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizationVersions) {
		toSerialize["authorizationVersions"] = o.AuthorizationVersions
	}
	return toSerialize, nil
}

type NullableListVersions200ResponseEmbedded struct {
	value *ListVersions200ResponseEmbedded
	isSet bool
}

func (v NullableListVersions200ResponseEmbedded) Get() *ListVersions200ResponseEmbedded {
	return v.value
}

func (v *NullableListVersions200ResponseEmbedded) Set(val *ListVersions200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListVersions200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListVersions200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVersions200ResponseEmbedded(val *ListVersions200ResponseEmbedded) *NullableListVersions200ResponseEmbedded {
	return &NullableListVersions200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListVersions200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVersions200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


