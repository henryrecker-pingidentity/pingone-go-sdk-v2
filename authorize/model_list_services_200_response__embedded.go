/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the ListServices200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServices200ResponseEmbedded{}

// ListServices200ResponseEmbedded struct for ListServices200ResponseEmbedded
type ListServices200ResponseEmbedded struct {
	AuthorizationServices []AuthorizeEditorDataDefinitionsServiceDefinitionDTO `json:"authorizationServices,omitempty"`
}

// NewListServices200ResponseEmbedded instantiates a new ListServices200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServices200ResponseEmbedded() *ListServices200ResponseEmbedded {
	this := ListServices200ResponseEmbedded{}
	return &this
}

// NewListServices200ResponseEmbeddedWithDefaults instantiates a new ListServices200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServices200ResponseEmbeddedWithDefaults() *ListServices200ResponseEmbedded {
	this := ListServices200ResponseEmbedded{}
	return &this
}

// GetAuthorizationServices returns the AuthorizationServices field value if set, zero value otherwise.
func (o *ListServices200ResponseEmbedded) GetAuthorizationServices() []AuthorizeEditorDataDefinitionsServiceDefinitionDTO {
	if o == nil || IsNil(o.AuthorizationServices) {
		var ret []AuthorizeEditorDataDefinitionsServiceDefinitionDTO
		return ret
	}
	return o.AuthorizationServices
}

// GetAuthorizationServicesOk returns a tuple with the AuthorizationServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServices200ResponseEmbedded) GetAuthorizationServicesOk() ([]AuthorizeEditorDataDefinitionsServiceDefinitionDTO, bool) {
	if o == nil || IsNil(o.AuthorizationServices) {
		return nil, false
	}
	return o.AuthorizationServices, true
}

// HasAuthorizationServices returns a boolean if a field has been set.
func (o *ListServices200ResponseEmbedded) HasAuthorizationServices() bool {
	if o != nil && !IsNil(o.AuthorizationServices) {
		return true
	}

	return false
}

// SetAuthorizationServices gets a reference to the given []AuthorizeEditorDataDefinitionsServiceDefinitionDTO and assigns it to the AuthorizationServices field.
func (o *ListServices200ResponseEmbedded) SetAuthorizationServices(v []AuthorizeEditorDataDefinitionsServiceDefinitionDTO) {
	o.AuthorizationServices = v
}

func (o ListServices200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListServices200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizationServices) {
		toSerialize["authorizationServices"] = o.AuthorizationServices
	}
	return toSerialize, nil
}

type NullableListServices200ResponseEmbedded struct {
	value *ListServices200ResponseEmbedded
	isSet bool
}

func (v NullableListServices200ResponseEmbedded) Get() *ListServices200ResponseEmbedded {
	return v.value
}

func (v *NullableListServices200ResponseEmbedded) Set(val *ListServices200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListServices200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListServices200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServices200ResponseEmbedded(val *ListServices200ResponseEmbedded) *NullableListServices200ResponseEmbedded {
	return &NullableListServices200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListServices200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServices200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


