/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataRulesReferenceableRuleDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataRulesReferenceableRuleDTO{}

// AuthorizeEditorDataRulesReferenceableRuleDTO struct for AuthorizeEditorDataRulesReferenceableRuleDTO
type AuthorizeEditorDataRulesReferenceableRuleDTO struct {
	Links *map[string]LinksHATEOASValue `json:"_links,omitempty"`
	EffectSettings AuthorizeEditorDataRulesEffectSettingsDTO `json:"effectSettings"`
	Version string `json:"version"`
}

// NewAuthorizeEditorDataRulesReferenceableRuleDTO instantiates a new AuthorizeEditorDataRulesReferenceableRuleDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataRulesReferenceableRuleDTO(effectSettings AuthorizeEditorDataRulesEffectSettingsDTO, version string) *AuthorizeEditorDataRulesReferenceableRuleDTO {
	this := AuthorizeEditorDataRulesReferenceableRuleDTO{}
	this.EffectSettings = effectSettings
	this.Version = version
	return &this
}

// NewAuthorizeEditorDataRulesReferenceableRuleDTOWithDefaults instantiates a new AuthorizeEditorDataRulesReferenceableRuleDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataRulesReferenceableRuleDTOWithDefaults() *AuthorizeEditorDataRulesReferenceableRuleDTO {
	this := AuthorizeEditorDataRulesReferenceableRuleDTO{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetEffectSettings returns the EffectSettings field value
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) GetEffectSettings() AuthorizeEditorDataRulesEffectSettingsDTO {
	if o == nil {
		var ret AuthorizeEditorDataRulesEffectSettingsDTO
		return ret
	}

	return o.EffectSettings
}

// GetEffectSettingsOk returns a tuple with the EffectSettings field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) GetEffectSettingsOk() (*AuthorizeEditorDataRulesEffectSettingsDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectSettings, true
}

// SetEffectSettings sets field value
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) SetEffectSettings(v AuthorizeEditorDataRulesEffectSettingsDTO) {
	o.EffectSettings = v
}

// GetVersion returns the Version field value
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AuthorizeEditorDataRulesReferenceableRuleDTO) SetVersion(v string) {
	o.Version = v
}

func (o AuthorizeEditorDataRulesReferenceableRuleDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataRulesReferenceableRuleDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	toSerialize["effectSettings"] = o.EffectSettings
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableAuthorizeEditorDataRulesReferenceableRuleDTO struct {
	value *AuthorizeEditorDataRulesReferenceableRuleDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataRulesReferenceableRuleDTO) Get() *AuthorizeEditorDataRulesReferenceableRuleDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataRulesReferenceableRuleDTO) Set(val *AuthorizeEditorDataRulesReferenceableRuleDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataRulesReferenceableRuleDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataRulesReferenceableRuleDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataRulesReferenceableRuleDTO(val *AuthorizeEditorDataRulesReferenceableRuleDTO) *NullableAuthorizeEditorDataRulesReferenceableRuleDTO {
	return &NullableAuthorizeEditorDataRulesReferenceableRuleDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataRulesReferenceableRuleDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataRulesReferenceableRuleDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


