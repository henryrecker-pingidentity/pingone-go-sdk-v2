/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataConditionsComparandDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataConditionsComparandDTO{}

// AuthorizeEditorDataConditionsComparandDTO struct for AuthorizeEditorDataConditionsComparandDTO
type AuthorizeEditorDataConditionsComparandDTO struct {
	Type string `json:"type"`
}

// NewAuthorizeEditorDataConditionsComparandDTO instantiates a new AuthorizeEditorDataConditionsComparandDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataConditionsComparandDTO(type_ string) *AuthorizeEditorDataConditionsComparandDTO {
	this := AuthorizeEditorDataConditionsComparandDTO{}
	this.Type = type_
	return &this
}

// NewAuthorizeEditorDataConditionsComparandDTOWithDefaults instantiates a new AuthorizeEditorDataConditionsComparandDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataConditionsComparandDTOWithDefaults() *AuthorizeEditorDataConditionsComparandDTO {
	this := AuthorizeEditorDataConditionsComparandDTO{}
	return &this
}

// GetType returns the Type field value
func (o *AuthorizeEditorDataConditionsComparandDTO) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataConditionsComparandDTO) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuthorizeEditorDataConditionsComparandDTO) SetType(v string) {
	o.Type = v
}

func (o AuthorizeEditorDataConditionsComparandDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataConditionsComparandDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableAuthorizeEditorDataConditionsComparandDTO struct {
	value *AuthorizeEditorDataConditionsComparandDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataConditionsComparandDTO) Get() *AuthorizeEditorDataConditionsComparandDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataConditionsComparandDTO) Set(val *AuthorizeEditorDataConditionsComparandDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataConditionsComparandDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataConditionsComparandDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataConditionsComparandDTO(val *AuthorizeEditorDataConditionsComparandDTO) *NullableAuthorizeEditorDataConditionsComparandDTO {
	return &NullableAuthorizeEditorDataConditionsComparandDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataConditionsComparandDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataConditionsComparandDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


