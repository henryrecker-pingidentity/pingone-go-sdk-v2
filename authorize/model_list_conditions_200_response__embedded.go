/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the ListConditions200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListConditions200ResponseEmbedded{}

// ListConditions200ResponseEmbedded struct for ListConditions200ResponseEmbedded
type ListConditions200ResponseEmbedded struct {
	AuthorizationConditions []AuthorizeEditorDataDefinitionsConditionDefinitionDTO `json:"authorizationConditions,omitempty"`
}

// NewListConditions200ResponseEmbedded instantiates a new ListConditions200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListConditions200ResponseEmbedded() *ListConditions200ResponseEmbedded {
	this := ListConditions200ResponseEmbedded{}
	return &this
}

// NewListConditions200ResponseEmbeddedWithDefaults instantiates a new ListConditions200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListConditions200ResponseEmbeddedWithDefaults() *ListConditions200ResponseEmbedded {
	this := ListConditions200ResponseEmbedded{}
	return &this
}

// GetAuthorizationConditions returns the AuthorizationConditions field value if set, zero value otherwise.
func (o *ListConditions200ResponseEmbedded) GetAuthorizationConditions() []AuthorizeEditorDataDefinitionsConditionDefinitionDTO {
	if o == nil || IsNil(o.AuthorizationConditions) {
		var ret []AuthorizeEditorDataDefinitionsConditionDefinitionDTO
		return ret
	}
	return o.AuthorizationConditions
}

// GetAuthorizationConditionsOk returns a tuple with the AuthorizationConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConditions200ResponseEmbedded) GetAuthorizationConditionsOk() ([]AuthorizeEditorDataDefinitionsConditionDefinitionDTO, bool) {
	if o == nil || IsNil(o.AuthorizationConditions) {
		return nil, false
	}
	return o.AuthorizationConditions, true
}

// HasAuthorizationConditions returns a boolean if a field has been set.
func (o *ListConditions200ResponseEmbedded) HasAuthorizationConditions() bool {
	if o != nil && !IsNil(o.AuthorizationConditions) {
		return true
	}

	return false
}

// SetAuthorizationConditions gets a reference to the given []AuthorizeEditorDataDefinitionsConditionDefinitionDTO and assigns it to the AuthorizationConditions field.
func (o *ListConditions200ResponseEmbedded) SetAuthorizationConditions(v []AuthorizeEditorDataDefinitionsConditionDefinitionDTO) {
	o.AuthorizationConditions = v
}

func (o ListConditions200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListConditions200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizationConditions) {
		toSerialize["authorizationConditions"] = o.AuthorizationConditions
	}
	return toSerialize, nil
}

type NullableListConditions200ResponseEmbedded struct {
	value *ListConditions200ResponseEmbedded
	isSet bool
}

func (v NullableListConditions200ResponseEmbedded) Get() *ListConditions200ResponseEmbedded {
	return v.value
}

func (v *NullableListConditions200ResponseEmbedded) Set(val *ListConditions200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListConditions200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListConditions200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListConditions200ResponseEmbedded(val *ListConditions200ResponseEmbedded) *NullableListConditions200ResponseEmbedded {
	return &NullableListConditions200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListConditions200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListConditions200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


