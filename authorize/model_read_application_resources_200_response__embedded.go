/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the ReadApplicationResources200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadApplicationResources200ResponseEmbedded{}

// ReadApplicationResources200ResponseEmbedded struct for ReadApplicationResources200ResponseEmbedded
type ReadApplicationResources200ResponseEmbedded struct {
	Resources []ApplicationResource `json:"resources,omitempty"`
}

// NewReadApplicationResources200ResponseEmbedded instantiates a new ReadApplicationResources200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadApplicationResources200ResponseEmbedded() *ReadApplicationResources200ResponseEmbedded {
	this := ReadApplicationResources200ResponseEmbedded{}
	return &this
}

// NewReadApplicationResources200ResponseEmbeddedWithDefaults instantiates a new ReadApplicationResources200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadApplicationResources200ResponseEmbeddedWithDefaults() *ReadApplicationResources200ResponseEmbedded {
	this := ReadApplicationResources200ResponseEmbedded{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ReadApplicationResources200ResponseEmbedded) GetResources() []ApplicationResource {
	if o == nil || IsNil(o.Resources) {
		var ret []ApplicationResource
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadApplicationResources200ResponseEmbedded) GetResourcesOk() ([]ApplicationResource, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ReadApplicationResources200ResponseEmbedded) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []ApplicationResource and assigns it to the Resources field.
func (o *ReadApplicationResources200ResponseEmbedded) SetResources(v []ApplicationResource) {
	o.Resources = v
}

func (o ReadApplicationResources200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadApplicationResources200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableReadApplicationResources200ResponseEmbedded struct {
	value *ReadApplicationResources200ResponseEmbedded
	isSet bool
}

func (v NullableReadApplicationResources200ResponseEmbedded) Get() *ReadApplicationResources200ResponseEmbedded {
	return v.value
}

func (v *NullableReadApplicationResources200ResponseEmbedded) Set(val *ReadApplicationResources200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableReadApplicationResources200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableReadApplicationResources200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadApplicationResources200ResponseEmbedded(val *ReadApplicationResources200ResponseEmbedded) *NullableReadApplicationResources200ResponseEmbedded {
	return &NullableReadApplicationResources200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableReadApplicationResources200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadApplicationResources200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
