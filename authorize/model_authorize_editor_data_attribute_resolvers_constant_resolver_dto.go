/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataAttributeResolversConstantResolverDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataAttributeResolversConstantResolverDTO{}

// AuthorizeEditorDataAttributeResolversConstantResolverDTO struct for AuthorizeEditorDataAttributeResolversConstantResolverDTO
type AuthorizeEditorDataAttributeResolversConstantResolverDTO struct {
	AuthorizeEditorDataResolverDTO
	Value string `json:"value"`
	ValueType AuthorizeEditorDataValueTypeDTO `json:"valueType"`
}

// NewAuthorizeEditorDataAttributeResolversConstantResolverDTO instantiates a new AuthorizeEditorDataAttributeResolversConstantResolverDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataAttributeResolversConstantResolverDTO(value string, valueType AuthorizeEditorDataValueTypeDTO, type_ string) *AuthorizeEditorDataAttributeResolversConstantResolverDTO {
	this := AuthorizeEditorDataAttributeResolversConstantResolverDTO{}
	this.Type = type_
	this.Value = value
	this.ValueType = valueType
	return &this
}

// NewAuthorizeEditorDataAttributeResolversConstantResolverDTOWithDefaults instantiates a new AuthorizeEditorDataAttributeResolversConstantResolverDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataAttributeResolversConstantResolverDTOWithDefaults() *AuthorizeEditorDataAttributeResolversConstantResolverDTO {
	this := AuthorizeEditorDataAttributeResolversConstantResolverDTO{}
	return &this
}

// GetValue returns the Value field value
func (o *AuthorizeEditorDataAttributeResolversConstantResolverDTO) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAttributeResolversConstantResolverDTO) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AuthorizeEditorDataAttributeResolversConstantResolverDTO) SetValue(v string) {
	o.Value = v
}

// GetValueType returns the ValueType field value
func (o *AuthorizeEditorDataAttributeResolversConstantResolverDTO) GetValueType() AuthorizeEditorDataValueTypeDTO {
	if o == nil {
		var ret AuthorizeEditorDataValueTypeDTO
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAttributeResolversConstantResolverDTO) GetValueTypeOk() (*AuthorizeEditorDataValueTypeDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *AuthorizeEditorDataAttributeResolversConstantResolverDTO) SetValueType(v AuthorizeEditorDataValueTypeDTO) {
	o.ValueType = v
}

func (o AuthorizeEditorDataAttributeResolversConstantResolverDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataAttributeResolversConstantResolverDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAuthorizeEditorDataResolverDTO, errAuthorizeEditorDataResolverDTO := json.Marshal(o.AuthorizeEditorDataResolverDTO)
	if errAuthorizeEditorDataResolverDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataResolverDTO
	}
	errAuthorizeEditorDataResolverDTO = json.Unmarshal([]byte(serializedAuthorizeEditorDataResolverDTO), &toSerialize)
	if errAuthorizeEditorDataResolverDTO != nil {
		return map[string]interface{}{}, errAuthorizeEditorDataResolverDTO
	}
	toSerialize["value"] = o.Value
	toSerialize["valueType"] = o.ValueType
	return toSerialize, nil
}

type NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO struct {
	value *AuthorizeEditorDataAttributeResolversConstantResolverDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO) Get() *AuthorizeEditorDataAttributeResolversConstantResolverDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO) Set(val *AuthorizeEditorDataAttributeResolversConstantResolverDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataAttributeResolversConstantResolverDTO(val *AuthorizeEditorDataAttributeResolversConstantResolverDTO) *NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO {
	return &NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataAttributeResolversConstantResolverDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


